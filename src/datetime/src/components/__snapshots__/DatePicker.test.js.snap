// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePicker render matches snapshot 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {
        "MuiButton": Object {
          "colorInherit": Object {
            "borderColor": "currentColor",
            "color": "inherit",
          },
          "contained": Object {
            "&:active": Object {
              "backgroundColor": "#8b8b90",
              "color": "white",
            },
            "&:focus": Object {
              "borderColor": "white",
              "boxShadow": "0 0 0 2px currentColor;",
            },
            "&:focus:hover": Object {
              "borderColor": "white",
              "boxShadow": "0 0 0 2px currentColor;",
            },
            "&:hover": Object {
              "boxShadow": "none",
            },
            "backgroundColor": "#f2f2f4",
            "border": "1px solid transparent",
            "boxShadow": "none",
            "color": "#56565a",
          },
          "containedSizeLarge": Object {
            "fontSize": "18px",
            "minHeight": "46px",
            "padding": "0 40px",
          },
          "containedSizeSmall": Object {
            "fontSize": "14px",
            "minHeight": "26px",
            "padding": "5px",
          },
          "disableElevation": Object {
            "boxShadow": "none",
          },
          "disabled": Object {},
          "endIcon": Object {
            "&$iconSizeSmall": Object {
              "marginRight": -2,
            },
            "display": "inherit",
            "marginLeft": 8,
            "marginRight": -4,
          },
          "focusVisible": Object {},
          "fullWidth": Object {
            "width": "100%",
          },
          "iconSizeLarge": Object {
            "& > *:first-child": Object {
              "fontSize": "inherit",
            },
          },
          "iconSizeMedium": Object {
            "& > *:first-child": Object {
              "fontSize": "inherit",
            },
          },
          "iconSizeSmall": Object {
            "& > *:first-child": Object {
              "fontSize": "inherit",
            },
          },
          "label": Object {
            "fontWeight": 600,
            "lineHeight": 1.2,
          },
          "outlined": Object {
            "&:active": Object {
              "backgroundColor": "#d1d1d6",
            },
            "&:focus": Object {
              "border": "1px solid transparent",
              "boxShadow": "0 0 0 2px currentColor",
            },
            "&:focus:hover": Object {
              "border": "1px solid transparent",
              "boxShadow": "0 0 0 2px currentColor",
            },
            "&:hover": Object {
              "backgroundColor": "#f2f2f4",
              "boxShadow": "none",
            },
            "boxShadow": "none",
            "color": "#56565a",
          },
          "outlinedSizeLarge": Object {
            "fontSize": "18px",
            "minHeight": "46px",
            "padding": "0 38px",
          },
          "outlinedSizeSmall": Object {
            "fontSize": "14px",
            "minHeight": "26px",
            "padding": "4px",
          },
          "root": Object {
            "borderRadius": "3px",
            "fontSize": "16px",
            "minHeight": "40px",
            "padding": "0 16px",
            "textTransform": "none",
          },
          "sizeLarge": Object {
            "minWidth": "26px",
          },
          "sizeSmall": Object {
            "minWidth": "26px",
          },
          "startIcon": Object {
            "&$iconSizeSmall": Object {
              "marginLeft": -2,
            },
            "display": "inherit",
            "marginLeft": -4,
            "marginRight": 8,
          },
          "text": Object {
            "&:active": Object {
              "backgroundColor": "#d1d1d6",
            },
            "&:focus": Object {
              "border": "1px solid transparent",
              "boxShadow": "0 0 0 2px currentColor",
            },
            "&:focus:hover": Object {
              "border": "1px solid transparent",
              "boxShadow": "0 0 0 2px currentColor",
            },
            "&:hover": Object {
              "backgroundColor": "#f2f2f4",
              "boxShadow": "none",
            },
            "border": "1px solid transparent",
            "boxShadow": "none",
            "color": "#56565a",
            "padding": "0 16px",
          },
          "textSizeLarge": Object {
            "fontSize": "18px",
            "minHeight": "46px",
            "padding": "0 40px",
          },
          "textSizeSmall": Object {
            "fontSize": "14px",
            "minHeight": "26px",
            "padding": "5px",
          },
        },
        "MuiCard": Object {
          "root": Object {
            "overflow": "visible",
          },
        },
        "MuiFilledInput": Object {
          "input": Object {
            "&$disabled": Object {
              "backgroundColor": "#f2f2f4",
              "cursor": "not-allowed",
            },
            "padding": "10px",
          },
          "inputHiddenLabel": Object {
            "paddingBottom": 10,
            "paddingTop": 10,
          },
          "multiline": Object {
            "padding": "10px",
          },
          "root": Object {
            "&$disabled": Object {
              "backgroundColor": "#f2f2f4",
              "cursor": "not-allowed",
            },
            "&$error": Object {
              "borderColor": "#ed4545",
            },
            "&$focused": Object {
              "backgroundColor": "#f9f9fc",
              "borderColor": "#56565a",
            },
            "&:hover:not($disabled):not($focused):not($error)": Object {
              "backgroundColor": "#dfdfe3",
              "border": "1px solid #dfdfe3",
            },
            "backgroundColor": "#f2f2f4",
            "border": "1px solid #f2f2f4",
          },
        },
        "MuiFormHelperText": Object {
          "contained": Object {
            "margin": "5px 10px 0",
          },
          "root": Object {
            "&$error": Object {
              "color": "#ed4545",
            },
            "fontFamily": "inherit",
            "fontSize": "12px",
          },
        },
        "MuiIconButton": Object {
          "root": Object {
            "fontSize": "1rem",
            "padding": "10px",
          },
          "sizeSmall": Object {
            "fontSize": "0.8rem",
            "padding": "6px",
          },
        },
        "MuiInputAdornment": Object {
          "root": Object {
            "color": "#8b8b90",
          },
        },
        "MuiInputBase": Object {
          "input": Object {
            "&$disabled": Object {
              "color": "#8b8b90",
              "cursor": "not-allowed",
            },
            "padding": "10px",
          },
          "inputHiddenLabel": Object {
            "padding": 0,
          },
          "root": Object {
            "&$disabled": Object {
              "cursor": "not-allowed",
            },
            "&:hover:not($disabled):not($focused):not($error)": Object {
              "backgroundColor": "#dfdfe3",
            },
            "borderRadius": "3px",
            "color": "#1f1f22",
            "fontFamily": "inherit",
            "fontSize": "14px",
            "lineHeight": "1.5",
            "minHeight": "40px",
          },
        },
        "MuiOutlinedInput": Object {
          "input": Object {
            "padding": "10px",
          },
          "notchedOutline": Object {
            "visibility": "hidden",
          },
          "root": Object {
            "&$error": Object {
              "borderColor": "#ed4545",
            },
            "&$focused": Object {
              "backgroundColor": "white",
              "borderColor": "#56565a",
            },
            "&.Mui-focused .MuiInputAdornment-root": Object {
              "color": "#56565a",
            },
            "&:hover:not($disabled):not($focused):not($error)": Object {
              "backgroundColor": "#f9f9fc",
            },
            "backgroundColor": "white",
            "border": "1px solid #dfdfe3",
          },
        },
        "MuiSwitch": Object {
          "checked": Object {},
          "colorPrimary": Object {
            "&$checked": Object {
              "color": "white",
            },
            "&$disabled": Object {
              "& + $track": Object {
                "backgroundColor": "#d1d1d6",
                "borderColor": "#d1d1d6",
                "opacity": 1,
              },
            },
          },
          "root": Object {
            "display": "flex",
            "height": 24,
            "padding": 0,
            "width": 42,
          },
          "switchBase": Object {
            "&$checked": Object {
              "& + $track": Object {
                "backgroundColor": "#6d49fe",
                "borderColor": "#6d49fe",
                "opacity": 1,
              },
              "color": "white",
              "transform": "translateX(18px)",
            },
            "&$disabled": Object {
              "& + $track": Object {
                "backgroundColor": "#d1d1d6",
                "borderColor": "#d1d1d6",
                "opacity": 1,
              },
              "backgroundColor": "#d1d1d6",
              "color": "white",
            },
            "color": "white",
            "padding": 4,
          },
          "thumb": Object {
            "boxShadow": "none",
            "color": "white",
            "height": 16,
            "width": 16,
          },
          "track": Object {
            "backgroundColor": "#8b8b90",
            "border": "1px solid #8b8b90",
            "borderRadius": 12,
            "opacity": 1,
          },
        },
        "MuiTimelineConnector": Object {
          "root": Object {
            "backgroundColor": "#d1d1d6",
          },
        },
        "MuiTimelineContent": Object {
          "root": Object {
            "padding": "0 16px",
          },
        },
        "MuiTimelineDot": Object {
          "defaultGrey": Object {
            "backgroundColor": "#d1d1d6",
          },
          "outlinedGrey": Object {
            "backgroundColor": "#d1d1d6",
          },
          "root": Object {
            "boxShadow": "none",
            "marginBottom": "4px",
            "marginTop": "4px",
          },
        },
        "MuiTimelineItem": Object {
          "missingOppositeContent": Object {
            "&:before": Object {
              "display": "none",
            },
          },
        },
        "MuiTimelineOppositeContent": Object {
          "root": Object {
            "padding": "0 16px",
          },
        },
        "MuiTouchRipple": Object {
          "@keyframes enter": Object {
            "0%": Object {
              "opacity": 0.1,
              "transform": "scale(1)",
            },
            "100%": Object {
              "opacity": 0.3,
              "transform": "scale(1)",
            },
          },
          "childLeaving": Object {
            "animationDuration": "250ms",
          },
          "rippleVisible": Object {
            "animationDuration": "250ms",
          },
        },
      },
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "header": "#f2f2f4",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "#dfdfe3",
        "error": Object {
          "contrastText": "white",
          "dark": "#4d0600",
          "light": "#9c2d23",
          "main": "#ed4545",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#dfdfe3",
          "200": "#d1d1d6",
          "300": "#c3c3c8",
          "400": "#a7a7ac",
          "50": "#f2f2f4",
          "500": "#8b8b90",
          "600": "#717175",
          "700": "#56565a",
          "800": "#3c3c40",
          "900": "#1f1f22",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "white",
          "dark": "#152c4a",
          "light": "#1150a4",
          "main": "#196fe1",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "#261e52",
          "light": "#4f3fa7",
          "main": "#6d49fe",
        },
        "secondary": Object {
          "contrastText": "#4f3fa7",
          "dark": "#6d49fe",
          "light": "#a291ff",
          "main": "#cac0ff",
        },
        "success": Object {
          "contrastText": "white",
          "dark": "#003925",
          "light": "#015b36",
          "main": "#01844d",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#1f1f22",
          "secondary": "#717175",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "#1f1f22",
          "dark": "#4a1f0c",
          "light": "#a34a25",
          "main": "#ff7c33",
        },
      },
      "props": Object {
        "MuiFilledInput": Object {
          "disableUnderline": true,
        },
        "MuiFormControl": Object {
          "fullWidth": true,
          "hiddenLabel": true,
        },
        "MuiOutlinedInput": Object {
          "notched": false,
        },
        "MuiSwitch": Object {
          "color": "primary",
        },
      },
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "lineHeight": 1.66,
        },
        "fontFamily": "'Inter', 'Arial', sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "lineHeight": 1.167,
        },
        "h2": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "lineHeight": 1.2,
        },
        "h3": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "lineHeight": 1.167,
        },
        "h4": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "lineHeight": 1.235,
        },
        "h5": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "lineHeight": 1.334,
        },
        "h6": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "'Inter', 'Arial', sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <MuiPickersUtilsProvider
    utils={[Function]}
  >
    <DatePicker
      disabled={false}
      format="MM/dd/yyyy"
      fullWidth={true}
      mask="__/__/____"
      placeholder="MM/DD/YYYY"
      value=""
    >
      <PickerWithState
        InputProps={
          Object {
            "onBlur": [Function],
            "onKeyDown": [Function],
          }
        }
        allowKeyboardControl={true}
        disabled={false}
        format="MM/dd/yyyy"
        fullWidth={true}
        inputVariant="filled"
        invalidDateMessage="Invalid Date Format"
        keyboardIcon={
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  448,
                  512,
                  Array [],
                  "f783",
                  "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                ],
                "iconName": "calendar-day",
                "prefix": "far",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size="lg"
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          />
        }
        mask="__/__/____"
        maxDate={2100-01-01T00:00:00.000Z}
        maxDateMessage="Date should not be after maximal date"
        minDate={1900-01-01T00:00:00.000Z}
        minDateMessage="Date should not be before minimal date"
        onChange={[Function]}
        openTo="date"
        placeholder="MM/DD/YYYY"
        value={null}
        variant="inline"
        views={
          Array [
            "year",
            "date",
          ]
        }
      >
        <Wrapper
          DateInputProps={
            Object {
              "format": "MM/dd/yyyy",
              "inputValue": "",
              "onChange": [Function],
              "openPicker": [Function],
              "validationError": "",
            }
          }
          InputComponent={[Function]}
          InputProps={
            Object {
              "onBlur": [Function],
              "onKeyDown": [Function],
            }
          }
          disabled={false}
          format="MM/dd/yyyy"
          fullWidth={true}
          inputVariant="filled"
          keyboardIcon={
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={false}
              flip={null}
              icon={
                Object {
                  "icon": Array [
                    448,
                    512,
                    Array [],
                    "f783",
                    "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                  ],
                  "iconName": "calendar-day",
                  "prefix": "far",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size="lg"
              spin={false}
              swapOpacity={false}
              symbol={false}
              title=""
              transform={null}
            />
          }
          mask="__/__/____"
          onAccept={[Function]}
          onClear={[Function]}
          onDismiss={[Function]}
          onSetToday={[Function]}
          open={false}
          placeholder="MM/DD/YYYY"
          variant="inline"
        >
          <InlineWrapper
            DateInputProps={
              Object {
                "format": "MM/dd/yyyy",
                "inputValue": "",
                "onChange": [Function],
                "openPicker": [Function],
                "validationError": "",
              }
            }
            InputComponent={[Function]}
            InputProps={
              Object {
                "onBlur": [Function],
                "onKeyDown": [Function],
              }
            }
            disabled={false}
            format="MM/dd/yyyy"
            fullWidth={true}
            inputVariant="filled"
            keyboardIcon={
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon={
                  Object {
                    "icon": Array [
                      448,
                      512,
                      Array [],
                      "f783",
                      "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                    ],
                    "iconName": "calendar-day",
                    "prefix": "far",
                  }
                }
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size="lg"
                spin={false}
                swapOpacity={false}
                symbol={false}
                title=""
                transform={null}
              />
            }
            mask="__/__/____"
            onAccept={[Function]}
            onClear={[Function]}
            onDismiss={[Function]}
            onSetToday={[Function]}
            open={false}
            placeholder="MM/DD/YYYY"
          >
            <KeyboardDateInput
              InputProps={
                Object {
                  "onBlur": [Function],
                  "onKeyDown": [Function],
                }
              }
              disabled={false}
              format="MM/dd/yyyy"
              fullWidth={true}
              inputRef={
                Object {
                  "current": <input
                    aria-invalid="false"
                    class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                    placeholder="MM/DD/YYYY"
                    type="text"
                    value=""
                  />,
                }
              }
              inputValue=""
              inputVariant="filled"
              keyboardIcon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        448,
                        512,
                        Array [],
                        "f783",
                        "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                      ],
                      "iconName": "calendar-day",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size="lg"
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mask="__/__/____"
              onChange={[Function]}
              openPicker={[Function]}
              placeholder="MM/DD/YYYY"
              validationError=""
            >
              <Rifm
                format={[Function]}
                key="__/__/____"
                onChange={[Function]}
                refuse={/\\[\\^\\\\d\\]\\+/gi}
                value=""
              >
                <WithStyles(ForwardRef(TextField))
                  InputProps={
                    Object {
                      "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                        position="end"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          disabled={false}
                          onClick={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  448,
                                  512,
                                  Array [],
                                  "f783",
                                  "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                ],
                                "iconName": "calendar-day",
                                "prefix": "far",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size="lg"
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                        </WithStyles(ForwardRef(IconButton))>
                      </WithStyles(ForwardRef(InputAdornment))>,
                      "onBlur": [Function],
                      "onKeyDown": [Function],
                    }
                  }
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  helperText=""
                  inputRef={
                    Object {
                      "current": <input
                        aria-invalid="false"
                        class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                        placeholder="MM/DD/YYYY"
                        type="text"
                        value=""
                      />,
                    }
                  }
                  onChange={[Function]}
                  placeholder="MM/DD/YYYY"
                  value=""
                  variant="filled"
                >
                  <ForwardRef(TextField)
                    InputProps={
                      Object {
                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                          position="end"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            disabled={false}
                            onClick={[Function]}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    448,
                                    512,
                                    Array [],
                                    "f783",
                                    "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                  ],
                                  "iconName": "calendar-day",
                                  "prefix": "far",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                          </WithStyles(ForwardRef(IconButton))>
                        </WithStyles(ForwardRef(InputAdornment))>,
                        "onBlur": [Function],
                        "onKeyDown": [Function],
                      }
                    }
                    classes={
                      Object {
                        "root": "MuiTextField-root",
                      }
                    }
                    disabled={false}
                    error={false}
                    fullWidth={true}
                    helperText=""
                    inputRef={
                      Object {
                        "current": <input
                          aria-invalid="false"
                          class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                          placeholder="MM/DD/YYYY"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    onChange={[Function]}
                    placeholder="MM/DD/YYYY"
                    value=""
                    variant="filled"
                  >
                    <WithStyles(ForwardRef(FormControl))
                      className="MuiTextField-root"
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      required={false}
                      variant="filled"
                    >
                      <ForwardRef(FormControl)
                        className="MuiTextField-root"
                        classes={
                          Object {
                            "fullWidth": "MuiFormControl-fullWidth",
                            "marginDense": "MuiFormControl-marginDense",
                            "marginNormal": "MuiFormControl-marginNormal",
                            "root": "MuiFormControl-root",
                          }
                        }
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        hiddenLabel={true}
                        required={false}
                        variant="filled"
                      >
                        <div
                          className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                        >
                          <WithStyles(ForwardRef(FilledInput))
                            autoFocus={false}
                            endAdornment={
                              <WithStyles(ForwardRef(InputAdornment))
                                position="end"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  disabled={false}
                                  onClick={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          448,
                                          512,
                                          Array [],
                                          "f783",
                                          "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                        ],
                                        "iconName": "calendar-day",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="lg"
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  />
                                </WithStyles(ForwardRef(IconButton))>
                              </WithStyles(ForwardRef(InputAdornment))>
                            }
                            fullWidth={true}
                            inputRef={
                              Object {
                                "current": <input
                                  aria-invalid="false"
                                  class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                                  placeholder="MM/DD/YYYY"
                                  type="text"
                                  value=""
                                />,
                              }
                            }
                            multiline={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            placeholder="MM/DD/YYYY"
                            value=""
                          >
                            <ForwardRef(FilledInput)
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiFilledInput-adornedEnd",
                                  "adornedStart": "MuiFilledInput-adornedStart",
                                  "colorSecondary": "MuiFilledInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "input": "MuiFilledInput-input",
                                  "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                  "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                  "inputMultiline": "MuiFilledInput-inputMultiline",
                                  "marginDense": "MuiFilledInput-marginDense",
                                  "multiline": "MuiFilledInput-multiline",
                                  "root": "MuiFilledInput-root",
                                  "underline": "MuiFilledInput-underline",
                                }
                              }
                              disableUnderline={true}
                              endAdornment={
                                <WithStyles(ForwardRef(InputAdornment))
                                  position="end"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f783",
                                            "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                          ],
                                          "iconName": "calendar-day",
                                          "prefix": "far",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      swapOpacity={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    />
                                  </WithStyles(ForwardRef(IconButton))>
                                </WithStyles(ForwardRef(InputAdornment))>
                              }
                              fullWidth={true}
                              inputRef={
                                Object {
                                  "current": <input
                                    aria-invalid="false"
                                    class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                                    placeholder="MM/DD/YYYY"
                                    type="text"
                                    value=""
                                  />,
                                }
                              }
                              multiline={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder="MM/DD/YYYY"
                              value=""
                            >
                              <WithStyles(ForwardRef(InputBase))
                                autoFocus={false}
                                classes={
                                  Object {
                                    "adornedEnd": "MuiFilledInput-adornedEnd",
                                    "adornedStart": "MuiFilledInput-adornedStart",
                                    "colorSecondary": "MuiFilledInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "input": "MuiFilledInput-input",
                                    "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                    "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                    "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                    "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                    "inputMultiline": "MuiFilledInput-inputMultiline",
                                    "marginDense": "MuiFilledInput-marginDense",
                                    "multiline": "MuiFilledInput-multiline",
                                    "root": "MuiFilledInput-root",
                                    "underline": null,
                                  }
                                }
                                endAdornment={
                                  <WithStyles(ForwardRef(InputAdornment))
                                    position="end"
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              448,
                                              512,
                                              Array [],
                                              "f783",
                                              "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                            ],
                                            "iconName": "calendar-day",
                                            "prefix": "far",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size="lg"
                                        spin={false}
                                        swapOpacity={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      />
                                    </WithStyles(ForwardRef(IconButton))>
                                  </WithStyles(ForwardRef(InputAdornment))>
                                }
                                fullWidth={true}
                                inputComponent="input"
                                inputRef={
                                  Object {
                                    "current": <input
                                      aria-invalid="false"
                                      class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                                      placeholder="MM/DD/YYYY"
                                      type="text"
                                      value=""
                                    />,
                                  }
                                }
                                multiline={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onKeyDown={[Function]}
                                placeholder="MM/DD/YYYY"
                                type="text"
                                value=""
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                      "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                      "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                      "disabled": "Mui-disabled Mui-disabled",
                                      "error": "Mui-error Mui-error",
                                      "focused": "Mui-focused Mui-focused",
                                      "formControl": "MuiInputBase-formControl",
                                      "fullWidth": "MuiInputBase-fullWidth",
                                      "input": "MuiInputBase-input MuiFilledInput-input",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                      "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                      "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                      "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                      "root": "MuiInputBase-root MuiFilledInput-root",
                                    }
                                  }
                                  endAdornment={
                                    <WithStyles(ForwardRef(InputAdornment))
                                      position="end"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                448,
                                                512,
                                                Array [],
                                                "f783",
                                                "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                              ],
                                              "iconName": "calendar-day",
                                              "prefix": "far",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size="lg"
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        />
                                      </WithStyles(ForwardRef(IconButton))>
                                    </WithStyles(ForwardRef(InputAdornment))>
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  inputRef={
                                    Object {
                                      "current": <input
                                        aria-invalid="false"
                                        class="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                                        placeholder="MM/DD/YYYY"
                                        type="text"
                                        value=""
                                      />,
                                    }
                                  }
                                  multiline={false}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  placeholder="MM/DD/YYYY"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root MuiFilledInput-root MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiFilledInput-adornedEnd"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      autoFocus={false}
                                      className="MuiInputBase-input MuiFilledInput-input MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd"
                                      disabled={false}
                                      onAnimationStart={[Function]}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="MM/DD/YYYY"
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                    <WithStyles(ForwardRef(InputAdornment))
                                      position="end"
                                    >
                                      <ForwardRef(InputAdornment)
                                        classes={
                                          Object {
                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                            "filled": "MuiInputAdornment-filled",
                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                            "marginDense": "MuiInputAdornment-marginDense",
                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                            "positionStart": "MuiInputAdornment-positionStart",
                                            "root": "MuiInputAdornment-root",
                                          }
                                        }
                                        position="end"
                                      >
                                        <div
                                          className="MuiInputAdornment-root MuiInputAdornment-hiddenLabel MuiInputAdornment-filled MuiInputAdornment-positionEnd"
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            disabled={false}
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(IconButton)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              disabled={false}
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root"
                                                disabled={false}
                                                focusRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    className="MuiButtonBase-root MuiIconButton-root"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className=""
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              448,
                                                              512,
                                                              Array [],
                                                              "f783",
                                                              "M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z",
                                                            ],
                                                            "iconName": "calendar-day",
                                                            "prefix": "far",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size="lg"
                                                        spin={false}
                                                        swapOpacity={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-calendar-day fa-w-14 fa-lg "
                                                          data-icon="calendar-day"
                                                          data-prefix="far"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 448 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M112 368h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V160h352v298z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={true}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={true}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </div>
                                      </ForwardRef(InputAdornment)>
                                    </WithStyles(ForwardRef(InputAdornment))>
                                  </div>
                                </ForwardRef(InputBase)>
                              </WithStyles(ForwardRef(InputBase))>
                            </ForwardRef(FilledInput)>
                          </WithStyles(ForwardRef(FilledInput))>
                        </div>
                      </ForwardRef(FormControl)>
                    </WithStyles(ForwardRef(FormControl))>
                  </ForwardRef(TextField)>
                </WithStyles(ForwardRef(TextField))>
              </Rifm>
            </KeyboardDateInput>
            <WithStyles(ForwardRef(Popover))
              anchorOrigin={
                Object {
                  "horizontal": "center",
                  "vertical": "bottom",
                }
              }
              onClose={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "center",
                  "vertical": "top",
                }
              }
            >
              <ForwardRef(Popover)
                anchorOrigin={
                  Object {
                    "horizontal": "center",
                    "vertical": "bottom",
                  }
                }
                classes={
                  Object {
                    "paper": "MuiPopover-paper",
                    "root": "MuiPopover-root",
                  }
                }
                onClose={[Function]}
                open={false}
                transformOrigin={
                  Object {
                    "horizontal": "center",
                    "vertical": "top",
                  }
                }
              >
                <ForwardRef(Modal)
                  BackdropProps={
                    Object {
                      "invisible": true,
                    }
                  }
                  className="MuiPopover-root"
                  onClose={[Function]}
                  open={false}
                />
              </ForwardRef(Popover)>
            </WithStyles(ForwardRef(Popover))>
          </InlineWrapper>
        </Wrapper>
      </PickerWithState>
    </DatePicker>
  </MuiPickersUtilsProvider>
</ThemeProvider>
`;
