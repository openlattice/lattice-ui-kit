// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IconButton snapshots default 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: auto;
}

.c0::before {
  content: "";
  display: block;
  padding-bottom: 100%;
}

.c0 >:first-child {
  visibility: visible;
}

<IconButton>
  <WithStyles(ForwardRef(IconButton))
    className=""
    color="default"
    disabled={false}
  >
    <ForwardRef(IconButton)
      className=""
      classes={
        Object {
          "colorInherit": "MuiIconButton-colorInherit",
          "colorPrimary": "MuiIconButton-colorPrimary",
          "colorSecondary": "MuiIconButton-colorSecondary",
          "disabled": "Mui-disabled",
          "edgeEnd": "MuiIconButton-edgeEnd",
          "edgeStart": "MuiIconButton-edgeStart",
          "label": "MuiIconButton-label",
          "root": "MuiIconButton-root",
          "sizeSmall": "MuiIconButton-sizeSmall",
        }
      }
      color="default"
      disabled={false}
    >
      <WithStyles(ForwardRef(ButtonBase))
        centerRipple={true}
        className="MuiIconButton-root"
        disabled={false}
        focusRipple={true}
      >
        <ForwardRef(ButtonBase)
          centerRipple={true}
          className="MuiIconButton-root"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          disabled={false}
          focusRipple={true}
        >
          <button
            className="MuiButtonBase-root MuiIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            <span
              className="MuiIconButton-label"
            >
              <IconButton__IconSquareWrapper
                isLoading={false}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "IconButton__IconSquareWrapper-g9q5gl-0",
                        "isStatic": false,
                        "lastClassName": "c0",
                        "rules": Array [
                          "align-items:center;display:flex;justify-content:center;width:auto;&::before{content:\\"\\";display:block;padding-bottom:100%;}>:first-child{visibility:",
                          [Function],
                          ";}",
                        ],
                      },
                      "displayName": "IconButton__IconSquareWrapper",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "IconButton__IconSquareWrapper-g9q5gl-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  isLoading={false}
                >
                  <div
                    className="c0"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            640,
                            512,
                            Array [],
                            "f197",
                            "M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z",
                          ],
                          "iconName": "space-shuttle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotate={-45}
                      rotation={null}
                      size={null}
                      spin={false}
                      swapOpacity={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-space-shuttle fa-w-20 "
                        data-icon="space-shuttle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        rotate={-45}
                        style={Object {}}
                        viewBox="0 0 640 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </div>
                </StyledComponent>
              </IconButton__IconSquareWrapper>
            </span>
            <WithStyles(memo)
              center={true}
            >
              <ForwardRef(TouchRipple)
                center={true}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child",
                    "childLeaving": "MuiTouchRipple-childLeaving",
                    "childPulsate": "MuiTouchRipple-childPulsate",
                    "ripple": "MuiTouchRipple-ripple",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                    "root": "MuiTouchRipple-root",
                  }
                }
              >
                <span
                  className="MuiTouchRipple-root"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component={null}
                    exit={true}
                  />
                </span>
              </ForwardRef(TouchRipple)>
            </WithStyles(memo)>
          </button>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(IconButton)>
  </WithStyles(ForwardRef(IconButton))>
</IconButton>
`;

exports[`IconButton snapshots spinner 1`] = `
.c2 {
  -webkit-animation: fa-spin 0.75s infinite linear;
  animation: fa-spin 0.75s infinite linear;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: auto;
}

.c0::before {
  content: "";
  display: block;
  padding-bottom: 100%;
}

.c0 >:first-child {
  visibility: hidden;
}

.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  width: 100%;
}

<IconButton
  isLoading={true}
>
  <WithStyles(ForwardRef(IconButton))
    className=""
    color="default"
    disabled={true}
  >
    <ForwardRef(IconButton)
      className=""
      classes={
        Object {
          "colorInherit": "MuiIconButton-colorInherit",
          "colorPrimary": "MuiIconButton-colorPrimary",
          "colorSecondary": "MuiIconButton-colorSecondary",
          "disabled": "Mui-disabled",
          "edgeEnd": "MuiIconButton-edgeEnd",
          "edgeStart": "MuiIconButton-edgeStart",
          "label": "MuiIconButton-label",
          "root": "MuiIconButton-root",
          "sizeSmall": "MuiIconButton-sizeSmall",
        }
      }
      color="default"
      disabled={true}
    >
      <WithStyles(ForwardRef(ButtonBase))
        centerRipple={true}
        className="MuiIconButton-root Mui-disabled"
        disabled={true}
        focusRipple={true}
      >
        <ForwardRef(ButtonBase)
          centerRipple={true}
          className="MuiIconButton-root Mui-disabled"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          disabled={true}
          focusRipple={true}
        >
          <button
            className="MuiButtonBase-root MuiIconButton-root Mui-disabled Mui-disabled"
            disabled={true}
            onBlur={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={-1}
            type="button"
          >
            <span
              className="MuiIconButton-label"
            >
              <IconButton__IconSquareWrapper
                isLoading={true}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "IconButton__IconSquareWrapper-g9q5gl-0",
                        "isStatic": false,
                        "lastClassName": "c0",
                        "rules": Array [
                          "align-items:center;display:flex;justify-content:center;width:auto;&::before{content:\\"\\";display:block;padding-bottom:100%;}>:first-child{visibility:",
                          [Function],
                          ";}",
                        ],
                      },
                      "displayName": "IconButton__IconSquareWrapper",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "IconButton__IconSquareWrapper-g9q5gl-0",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  isLoading={true}
                >
                  <div
                    className="c0"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            640,
                            512,
                            Array [],
                            "f197",
                            "M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z",
                          ],
                          "iconName": "space-shuttle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotate={-45}
                      rotation={null}
                      size={null}
                      spin={false}
                      swapOpacity={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-space-shuttle fa-w-20 "
                        data-icon="space-shuttle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        rotate={-45}
                        style={Object {}}
                        viewBox="0 0 640 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                    <IconButton__SpinnerWrapper>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "IconButton__SpinnerWrapper-g9q5gl-1",
                              "isStatic": false,
                              "lastClassName": "c1",
                              "rules": Array [
                                "align-items:center;border-radius:50%;display:flex;height:100%;justify-content:center;position:absolute;width:100%;",
                              ],
                            },
                            "displayName": "IconButton__SpinnerWrapper",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "IconButton__SpinnerWrapper-g9q5gl-1",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c1"
                        >
                          <Spinner
                            bottomColor="#c3c3c8"
                            centered={true}
                            size="1x"
                            topColor="#56565a"
                          >
                            <Rotate
                              centered={true}
                              className="fa-layers fa-fw fa-1x"
                            >
                              <StyledComponent
                                centered={true}
                                className="fa-layers fa-fw fa-1x"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Rotate-sc-1o7nhkd-0",
                                      "isStatic": false,
                                      "lastClassName": "c2",
                                      "rules": Array [
                                        "animation:fa-spin ",
                                        [Function],
                                        " infinite linear;align-self:",
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "Rotate",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Rotate-sc-1o7nhkd-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c2 fa-layers fa-fw fa-1x"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    color="#c3c3c8"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f111",
                                          "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm216 248c0 118.7-96.1 216-216 216-118.7 0-216-96.1-216-216 0-118.7 96.1-216 216-216 118.7 0 216 96.1 216 216z",
                                        ],
                                        "iconName": "circle",
                                        "prefix": "fal",
                                      }
                                    }
                                    id="spinner-circle"
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-circle fa-w-16 "
                                      color="#c3c3c8"
                                      data-icon="circle"
                                      data-prefix="fal"
                                      focusable="false"
                                      id="spinner-circle"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm216 248c0 118.7-96.1 216-216 216-118.7 0-216-96.1-216-216 0-118.7 96.1-216 216-216 118.7 0 216 96.1 216 216z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    color="#56565a"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f3f4",
                                          "M460.115 373.846l-6.941-4.008c-5.546-3.202-7.564-10.177-4.661-15.886 32.971-64.838 31.167-142.731-5.415-205.954-36.504-63.356-103.118-103.876-175.8-107.701C260.952 39.963 256 34.676 256 28.321v-8.012c0-6.904 5.808-12.337 12.703-11.982 83.552 4.306 160.157 50.861 202.106 123.67 42.069 72.703 44.083 162.322 6.034 236.838-3.14 6.149-10.75 8.462-16.728 5.011z",
                                        ],
                                        "iconName": "spinner-third",
                                        "prefix": "fal",
                                      }
                                    }
                                    id="spinner-third"
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-spinner-third fa-w-16 "
                                      color="#56565a"
                                      data-icon="spinner-third"
                                      data-prefix="fal"
                                      focusable="false"
                                      id="spinner-third"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M460.115 373.846l-6.941-4.008c-5.546-3.202-7.564-10.177-4.661-15.886 32.971-64.838 31.167-142.731-5.415-205.954-36.504-63.356-103.118-103.876-175.8-107.701C260.952 39.963 256 34.676 256 28.321v-8.012c0-6.904 5.808-12.337 12.703-11.982 83.552 4.306 160.157 50.861 202.106 123.67 42.069 72.703 44.083 162.322 6.034 236.838-3.14 6.149-10.75 8.462-16.728 5.011z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Rotate>
                          </Spinner>
                        </div>
                      </StyledComponent>
                    </IconButton__SpinnerWrapper>
                  </div>
                </StyledComponent>
              </IconButton__IconSquareWrapper>
            </span>
          </button>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(IconButton)>
  </WithStyles(ForwardRef(IconButton))>
</IconButton>
`;
