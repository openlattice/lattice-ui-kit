// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer snapshots isOpen = false 1`] = `
<Drawer
  isOpen={false}
  shouldCloseOnOutsideClick={true}
  side="left"
  transparentOverlay={false}
>
  <Overlay
    isScrollable={true}
    isVisible={false}
    shouldCloseOnClick={true}
    transparent={false}
  />
</Drawer>
`;

exports[`Drawer snapshots isOpen = true 1`] = `
.c0 {
  background-color: rgba(8,0,25,0.3);
  bottom: 0;
  display: block;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 1000;
}

.c1 {
  display: block;
  height: 100%;
  position: absolute;
  overflow-y: scroll;
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  background-color: #ffffff;
  box-shadow: 0 0 30px 0 rgba(0,0,0,0.2);
  height: 100%;
  overflow-y: auto;
  position: fixed;
  top: 0;
  min-width: 300px;
  z-index: 900;
  left: 0;
}

<Drawer
  isOpen={true}
  shouldCloseOnOutsideClick={true}
  side="left"
  transparentOverlay={false}
>
  <Overlay
    isScrollable={true}
    isVisible={true}
    shouldCloseOnClick={true}
    transparent={false}
  >
    <Portal>
      <Portal
        containerInfo={
          .c0 {
  background-color: rgba(8,0,25,0.3);
  bottom: 0;
  display: block;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 1000;
}

.c1 {
  display: block;
  height: 100%;
  position: absolute;
  overflow-y: scroll;
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  background-color: #ffffff;
  box-shadow: 0 0 30px 0 rgba(0,0,0,0.2);
  height: 100%;
  overflow-y: auto;
  position: fixed;
  top: 0;
  min-width: 300px;
  z-index: 900;
  left: 0;
}

<div
            lattice-portal-inner-container=""
          >
            <div
              class="c0"
            >
              <div
                class="c1"
              >
                <div
                  class="c2"
                />
              </div>
            </div>
          </div>
        }
      >
        <OverlayOuterContainer
          transparent={false}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "StyledOverlayComponents__OverlayOuterContainer-ol4tzw-0",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "background-color:",
                    [Function],
                    ";bottom:0;display:block;left:0;position:fixed;right:0;top:0;z-index:1000;",
                  ],
                },
                "displayName": "OverlayOuterContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "StyledOverlayComponents__OverlayOuterContainer-ol4tzw-0",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            transparent={false}
          >
            <div
              className="c0"
            >
              <OverlayInnerContainer
                isScrollable={true}
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "StyledOverlayComponents__OverlayInnerContainer-ol4tzw-1",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "display:block;height:100%;position:absolute;overflow-y:",
                          [Function],
                          ";width:100%;",
                        ],
                      },
                      "displayName": "OverlayInnerContainer",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "StyledOverlayComponents__OverlayInnerContainer-ol4tzw-1",
                      "target": "div",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  isScrollable={true}
                  onClick={[Function]}
                >
                  <div
                    className="c1"
                    onClick={[Function]}
                  >
                    <DrawerCard
                      side="left"
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "DrawerCard-sc-1ka5kr5-0",
                              "isStatic": false,
                              "lastClassName": "c2",
                              "rules": Array [
                                "display:flex;flex-direction:column;justify-content:flex-start;background-color:",
                                "#ffffff",
                                ";box-shadow:0 0 30px 0 rgba(0,0,0,0.2);height:100%;overflow-y:auto;position:fixed;top:0;min-width:300px;z-index:900;",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "DrawerCard",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "DrawerCard-sc-1ka5kr5-0",
                            "target": "div",
                            "toString": [Function],
                            "usesTheme": false,
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        side="left"
                      >
                        <div
                          className="c2"
                        />
                      </StyledComponent>
                    </DrawerCard>
                  </div>
                </StyledComponent>
              </OverlayInnerContainer>
            </div>
          </StyledComponent>
        </OverlayOuterContainer>
        <LockToggle
          accountForScrollbars={true}
          isActive={true}
        >
          <SheetProvider
            accountForScrollbars={true}
            isActive={true}
          >
            <TouchProvider
              accountForScrollbars={true}
              isActive={true}
            >
              <ScrollLock
                accountForScrollbars={true}
                isActive={true}
              />
            </TouchProvider>
          </SheetProvider>
        </LockToggle>
      </Portal>
    </Portal>
  </Overlay>
</Drawer>
`;
