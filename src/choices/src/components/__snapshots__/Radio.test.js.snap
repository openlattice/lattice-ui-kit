// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio render matches snapshot 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #555e6f;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  margin: 10px 0;
  min-height: 20px;
  padding-left: 30px;
  pointer-events: auto;
  position: relative;
}

.c2 {
  background-color: #e6e6f7;
  border-radius: 100%;
  height: 20px;
  left: 0;
  position: absolute;
  top: 0;
  -webkit-transition: background-color 0.1s ease-in-out,box-shadow 0.1s ease-in-out;
  transition: background-color 0.1s ease-in-out,box-shadow 0.1s ease-in-out;
  width: 20px;
}

input:hover ~ .c2 {
  background-color: #8e929b;
}

input:focus-visible ~ .c2 {
  box-shadow: #410ab5 0 0 0 2px;
}

input:checked ~ .c2 {
  background-color: #8045ff;
}

input:checked:hover ~ .c2 {
  background-color: #6124e2;
}

input:disabled ~ .c2 {
  background-color: #e6e6f7;
  cursor: not-allowed;
}

input:checked:disabled ~ .c2 {
  background-color: #b6bbc7;
}

input:not(:checked) ~ .c2:after,
input:checked ~ .c2:after {
  content: '';
  background-color: #ffffff;
  border-radius: 50%;
  height: 8px;
  left: 6px;
  position: absolute;
  top: 6px;
  width: 8px;
  -webkit-transition: -webkit-transform 0.2s ease-in-out,opacity 0.2s ease-in-out;
  -webkit-transition: transform 0.2s ease-in-out,opacity 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out,opacity 0.2s ease-in-out;
}

input:not(:checked) ~ .c2:after {
  opacity: 0;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

input:checked ~ .c2:after {
  opacity: 1;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c1 {
  position: absolute;
  z-index: -1;
  opacity: 0;
  vertical-align: middle;
}

<Radio
  disabled={false}
>
  <ChoiceLabel>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "ChoiceLabel-sc-11kob9e-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "align-items:center;color:",
              "#555e6f",
              ";display:inline-flex;margin:10px 0;min-height:20px;padding-left:30px;pointer-events:",
              [Function],
              ";position:relative;",
            ],
          },
          "displayName": "ChoiceLabel",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
          "target": "label",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <label
        className="c0"
      >
        <ChoiceInputs__RadioInput
          disabled={false}
        >
          <StyledComponent
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "position:absolute;z-index:-1;opacity:0;vertical-align:middle;",
                  ],
                },
                "displayName": "ChoiceInputs__RadioInput",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "ChoiceInputs__RadioInput-sc-1fkg6yx-0",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <input
              className="c1"
              disabled={false}
              type="radio"
            />
          </StyledComponent>
        </ChoiceInputs__RadioInput>
        <RadioIndicator>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "RadioIndicator-sc-1vlnpb4-0",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "background-color:",
                    "#e6e6f7",
                    ";border-radius:100%;height:20px;left:0;position:absolute;top:0;transition:background-color 0.1s ease-in-out,box-shadow 0.1s ease-in-out;width:20px;",
                    "input:hover ~ &{background-color:",
                    "#8e929b",
                    ";}input:focus-visible ~ &{box-shadow:",
                    "#410ab5",
                    " 0 0 0 2px;}input:checked ~ &{background-color:",
                    "#8045ff",
                    ";}input:checked:hover ~ &{background-color:",
                    "#6124e2",
                    ";}input:disabled ~ &{background-color:",
                    "#e6e6f7",
                    ";cursor:not-allowed;}input:checked:disabled ~ &{background-color:",
                    "#b6bbc7",
                    ";}",
                    ";input:not(:checked) ~ &:after,input:checked ~ &:after{",
                    "content:'';background-color:",
                    "#ffffff",
                    ";border-radius:50%;height:8px;left:6px;position:absolute;top:6px;width:8px;transition:transform 0.2s ease-in-out,opacity 0.2s ease-in-out;",
                    "}input:not(:checked) ~ &:after{opacity:0;transform:scale(0);}input:checked ~ &:after{opacity:1;transform:scale(1);}",
                  ],
                },
                "displayName": "RadioIndicator",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "RadioIndicator-sc-1vlnpb4-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            />
          </StyledComponent>
        </RadioIndicator>
      </label>
    </StyledComponent>
  </ChoiceLabel>
</Radio>
`;
