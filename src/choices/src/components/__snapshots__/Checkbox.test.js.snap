// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox render matches snapshot 1`] = `
.c4 {
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out,color 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out,color 100ms ease-out;
  background-color: #e6e6f7;
  border-radius: 3px;
  display: inline-block;
  height: 20px;
  width: 20px;
}

input:hover ~ .c4 {
  background-color: #8e929b;
}

input:focus ~ .c4 {
  box-shadow: #410ab5 0 0 0 2px;
}

input:checked ~ .c4,
input[readonly]:checked:disabled ~ .c4,
input[readonly]:checked:hover ~ .c4 {
  background-color: #8045ff;
}

input:checked:hover ~ .c4 {
  background-color: #6124e2;
}

input:disabled ~ .c4 {
  background-color: #e6e6f7;
  cursor: not-allowed;
}

input:checked:disabled ~ .c4 {
  cursor: not-allowed;
  background-color: #b6bbc7;
}

input[readonly] ~ .c4 {
  cursor: default;
  pointer-events: none;
}

input:not(:checked) ~ .c4:after,
input:checked ~ .c4:after {
  border-color: #ffffff;
  border-style: solid;
  border-width: 0 2px 2px 0;
  box-sizing: border-box;
  content: '';
  height: 10px;
  left: 7px;
  position: absolute;
  top: 4px;
  -webkit-transform: rotate(45deg) scale(1);
  -ms-transform: rotate(45deg) scale(1);
  transform: rotate(45deg) scale(1);
  -webkit-transition: -webkit-transform 200ms ease-out,opacity 200ms ease-out;
  -webkit-transition: transform 200ms ease-out,opacity 200ms ease-out;
  transition: transform 200ms ease-out,opacity 200ms ease-out;
  width: 6px;
}

input:not(:checked) ~ .c4:after {
  opacity: 0;
  -webkit-transform: rotate(45deg) scale(0);
  -ms-transform: rotate(45deg) scale(0);
  transform: rotate(45deg) scale(0);
}

input:checked ~ .c4:after {
  opacity: 1;
  -webkit-transform: rotate(45deg) scale(1);
  -ms-transform: rotate(45deg) scale(1);
  transform: rotate(45deg) scale(1);
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #555e6f;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 14px;
  min-height: 40px;
  pointer-events: auto;
  position: relative;
  vertical-align: middle;
}

.c5 {
  margin-left: 10px;
}

.c3 {
  height: 100%;
  left: 0;
  margin: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  vertical-align: middle;
  width: 100%;
  z-index: -1;
}

.c1 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  vertical-align: middle;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

<Checkbox
  disabled={false}
>
  <ChoiceLabel
    disabled={false}
  >
    <StyledComponent
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "ChoiceLabel-sc-11kob9e-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "align-items:center;color:",
              [Function],
              ";display:inline-flex;font-size:14px;min-height:40px;pointer-events:",
              [Function],
              ";position:relative;vertical-align:middle;",
            ],
          },
          "displayName": "ChoiceLabel",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
          "target": "label",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <label
        className="c0"
        disabled={false}
      >
        <ChoiceWrappers__ChoiceWrapper>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "align-items:stretch;display:inline-flex;justify-content:center;position:relative;vertical-align:middle;",
                    [Function],
                    ";",
                  ],
                },
                "displayName": "ChoiceWrappers__ChoiceWrapper",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "ChoiceWrappers__ChoiceWrapper-kj63qq-0",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            >
              <ChoiceWrappers__ChoiceInnerWrapper>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "display:flex;flex:1;",
                        ],
                      },
                      "displayName": "ChoiceWrappers__ChoiceInnerWrapper",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "ChoiceWrappers__ChoiceInnerWrapper-kj63qq-1",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c2"
                  >
                    <ChoiceInputs__CheckboxInput>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [
                              [Function],
                            ],
                            "componentStyle": ComponentStyle {
                              "componentId": "ChoiceInputs__CheckboxInput-sc-1fkg6yx-1",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "height:100%;left:0;margin:0;opacity:0;position:absolute;top:0;vertical-align:middle;width:100%;z-index:-1;",
                                ";",
                              ],
                            },
                            "displayName": "ChoiceInputs__CheckboxInput",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "ChoiceInputs__CheckboxInput-sc-1fkg6yx-1",
                            "target": "input",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <input
                          className="c3"
                          type="checkbox"
                        />
                      </StyledComponent>
                    </ChoiceInputs__CheckboxInput>
                    <CheckboxIndicator>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "CheckboxIndicator-sc-16t4mhx-0",
                              "isStatic": false,
                              "lastClassName": "c4",
                              "rules": Array [
                                "transition:background-color ",
                                "100ms",
                                " ease-out,border-color ",
                                "100ms",
                                " ease-out,box-shadow ",
                                "100ms",
                                " ease-out,color ",
                                "100ms",
                                " ease-out;",
                                [Function],
                              ],
                            },
                            "displayName": "CheckboxIndicator",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "CheckboxIndicator-sc-16t4mhx-0",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <span
                          className="c4"
                        />
                      </StyledComponent>
                    </CheckboxIndicator>
                  </span>
                </StyledComponent>
              </ChoiceWrappers__ChoiceInnerWrapper>
            </span>
          </StyledComponent>
        </ChoiceWrappers__ChoiceWrapper>
        <ChoiceText>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "ChoiceText-sc-1qnriny-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "margin-left:10px;",
                  ],
                },
                "displayName": "ChoiceText",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "ChoiceText-sc-1qnriny-0",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c5"
            />
          </StyledComponent>
        </ChoiceText>
      </label>
    </StyledComponent>
  </ChoiceLabel>
</Checkbox>
`;
