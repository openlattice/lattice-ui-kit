// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox render matches snapshot 1`] = `
.c2 {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background: #e6e6f7;
  border-radius: 3px;
}

.c2:after {
  display: none;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #555e6f;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  margin: 10px 0;
  min-height: 20px;
  padding-left: 30px;
  pointer-events: auto;
  position: relative;
}

.c1 {
  position: absolute;
  z-index: -1;
  opacity: 0;
  vertical-align: middle;
}

.c1:hover + div,
.c1:focus + div {
  background: #8e929b;
}

.c1:checked + div {
  background: #8045ff;
}

.c1:checked:hover + div,
.c1:checked:focus + div {
  background: #6124e2;
}

.c1:disabled + div {
  background: #e6e6f7;
  cursor: not-allowed;
}

.c1:checked:disabled + div {
  background: #b6bbc7;
}

<Checkbox
  defaultChecked={false}
  disabled={false}
>
  <ChoiceLabel>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "ChoiceLabel-sc-11kob9e-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "align-items:center;color:",
              "#555e6f",
              ";display:inline-flex;margin:10px 0;min-height:20px;padding-left:30px;pointer-events:",
              [Function],
              ";position:relative;",
            ],
          },
          "displayName": "ChoiceLabel",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "ChoiceLabel-sc-11kob9e-0",
          "target": "label",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <label
        className="c0"
      >
        <ChoiceInputs__CheckboxInput
          checked={false}
          disabled={false}
          onChange={[Function]}
        >
          <StyledComponent
            checked={false}
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "ChoiceInputs__CheckboxInput-sc-1fkg6yx-1",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "position:absolute;z-index:-1;opacity:0;vertical-align:middle;:hover + div,:focus + div{background:",
                    "#8e929b",
                    ";}:checked + div{background:",
                    "#8045ff",
                    ";}:checked:hover + div,:checked:focus + div{background:",
                    "#6124e2",
                    ";}:disabled + div{background:",
                    "#e6e6f7",
                    ";cursor:not-allowed;}:checked:disabled + div{background:",
                    "#b6bbc7",
                    ";}",
                    ";",
                  ],
                },
                "displayName": "ChoiceInputs__CheckboxInput",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "ChoiceInputs__CheckboxInput-sc-1fkg6yx-1",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onChange={[Function]}
          >
            <input
              checked={false}
              className="c1"
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
          </StyledComponent>
        </ChoiceInputs__CheckboxInput>
        <CheckboxIndicator
          checked={false}
        >
          <StyledComponent
            checked={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "CheckboxIndicator-sc-16t4mhx-0",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "position:absolute;top:0;left:0;height:20px;width:20px;background:",
                    "#e6e6f7",
                    ";border-radius:3px;:after{",
                    [Function],
                    "}",
                  ],
                },
                "displayName": "CheckboxIndicator",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "CheckboxIndicator-sc-16t4mhx-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              checked={false}
              className="c2"
            />
          </StyledComponent>
        </CheckboxIndicator>
      </label>
    </StyledComponent>
  </ChoiceLabel>
</Checkbox>
`;
