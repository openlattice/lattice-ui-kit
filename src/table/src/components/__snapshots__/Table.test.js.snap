// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table handlePageChange should invoke onPageChange on pagination button click 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "column": undefined,
        "order": undefined,
        "page": 1,
        "rowsPerPage": 7,
        "start": 7,
      },
      Object {
        "target": "mock",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Table handlePageChange should invoke onPageChange on pagination button click 2`] = `
.c5 {
  background-color: #ffffff;
  border-collapse: collapse;
  border: none;
  table-layout: fixed;
  width: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
}

.c7 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
  width: 33%;
}

.c8 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c9 {
  background-color: #f0f0f7;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c11 {
  background-color: inherit;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c6 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c6 td,
.c6 th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 200;
}

.c10 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c1 {
  color: #555e6f;
  display: inline-block;
  font-size: 14px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  margin: 5px 5px 5px 0;
  color: #8e929b;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.c4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  opacity: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  min-width: 14px;
}

.c2 {
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  line-height: 18px;
  outline: none;
  padding: 10px 20px;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  white-space: nowrap;
  background-color: transparent;
  border-color: transparent;
  color: #6124e2;
}

.c2:hover {
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.1);
}

.c2:active {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.15);
}

.c2:disabled {
  cursor: not-allowed;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  border-color: transparent;
  color: #b6bbc7;
}

.c2:focus {
  box-shadow: rgba(0,0,0,0.15) 0 0 0 2px;
}

<Table
  data={
    Array [
      Object {
        "dob": "1942-11-30",
        "id": "1",
        "lastUpdated": "2019-09-01",
        "manager": "Spongebob",
        "name": "Eugene Krabs",
      },
      Object {
        "dob": "",
        "id": "2",
        "lastUpdated": "2019-08-29",
        "manager": "Smitty",
        "name": "Squidward Tentacles",
      },
      Object {
        "dob": "1987-11-17",
        "id": "3",
        "lastUpdated": "2019-07-30",
        "manager": "Patrick",
        "name": "Sandy Cheeks",
      },
      Object {
        "dob": "1975-06-23",
        "id": "4",
        "lastUpdated": "2019-08-16",
        "manager": "Patchy",
        "name": "Larry the Lobster",
      },
      Object {
        "dob": "1942-11-30",
        "id": "5",
        "lastUpdated": "2019-08-20",
        "manager": "Spongebob",
        "name": "Sheldon Plankton",
      },
      Object {
        "dob": "",
        "id": "6",
        "lastUpdated": "2019-08-21",
        "manager": "Spongebob",
        "name": "Mrs. Puff",
      },
      Object {
        "dob": "1678-04-20",
        "id": "7",
        "lastUpdated": "2019-06-21",
        "manager": "Spongebob",
        "name": "Flying Dutchman",
      },
    ]
  }
  headers={
    Array [
      Object {
        "cellStyle": Object {
          "width": "33%",
        },
        "key": "name",
        "label": "Subject Name",
      },
      Object {
        "key": "dob",
        "label": "Date of Birth",
      },
      Object {
        "key": "manager",
        "label": "Manager",
      },
      Object {
        "key": "lastUpdated",
        "label": "Last Updated",
      },
      Object {
        "key": "id",
        "label": "ID",
        "sortable": false,
      },
    ]
  }
  onPageChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "column": undefined,
            "order": undefined,
            "page": 1,
            "rowsPerPage": 7,
            "start": 7,
          },
          Object {
            "target": "mock",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  paginated={true}
>
  <div>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
    <styled__StyledTable>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__StyledTable-r3xwjs-0",
              "isStatic": false,
              "lastClassName": "c5",
              "rules": Array [
                "background-color:",
                "#ffffff",
                ";border-collapse:collapse;border:none;table-layout:fixed;width:100%;",
              ],
            },
            "displayName": "styled__StyledTable",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__StyledTable-r3xwjs-0",
            "target": "table",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <table
          className="c5"
        >
          <TableHeader
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            onSort={[Function]}
            order={false}
            sticky={true}
          >
            <thead>
              <styled__StyledRow
                sticky={true}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__StyledRow-r3xwjs-3",
                        "isStatic": false,
                        "lastClassName": "c10",
                        "rules": Array [
                          "background-color:",
                          "#ffffff",
                          ";border-bottom:1px solid ",
                          "#dcdce7",
                          ";td,th{",
                          [Function],
                          "};",
                        ],
                      },
                      "displayName": "styled__StyledRow",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__StyledRow-r3xwjs-3",
                      "target": "tr",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  sticky={true}
                >
                  <tr
                    className="c6"
                  >
                    <HeadCell
                      cellStyle={
                        Object {
                          "width": "33%",
                        }
                      }
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="name"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={
                          Object {
                            "width": "33%",
                          }
                        }
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={
                            Object {
                              "width": "33%",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c7"
                            onClick={[Function]}
                          >
                            Subject Name
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="dob"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Date of Birth
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="manager"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Manager
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="lastUpdated"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Last Updated
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="id"
                      order={false}
                      sortable={false}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <th
                            className="c9"
                          >
                            ID
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                  </tr>
                </StyledComponent>
              </styled__StyledRow>
            </thead>
          </TableHeader>
          <TableBody
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            data={
              Array [
                Object {
                  "dob": "1942-11-30",
                  "id": "1",
                  "lastUpdated": "2019-09-01",
                  "manager": "Spongebob",
                  "name": "Eugene Krabs",
                },
                Object {
                  "dob": "",
                  "id": "2",
                  "lastUpdated": "2019-08-29",
                  "manager": "Smitty",
                  "name": "Squidward Tentacles",
                },
                Object {
                  "dob": "1987-11-17",
                  "id": "3",
                  "lastUpdated": "2019-07-30",
                  "manager": "Patrick",
                  "name": "Sandy Cheeks",
                },
                Object {
                  "dob": "1975-06-23",
                  "id": "4",
                  "lastUpdated": "2019-08-16",
                  "manager": "Patchy",
                  "name": "Larry the Lobster",
                },
                Object {
                  "dob": "1942-11-30",
                  "id": "5",
                  "lastUpdated": "2019-08-20",
                  "manager": "Spongebob",
                  "name": "Sheldon Plankton",
                },
                Object {
                  "dob": "",
                  "id": "6",
                  "lastUpdated": "2019-08-21",
                  "manager": "Spongebob",
                  "name": "Mrs. Puff",
                },
                Object {
                  "dob": "1678-04-20",
                  "id": "7",
                  "lastUpdated": "2019-06-21",
                  "manager": "Spongebob",
                  "name": "Flying Dutchman",
                },
              ]
            }
            exact={false}
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            page={0}
            rowsPerPage={7}
          >
            <tbody>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "1",
                    "lastUpdated": "2019-09-01",
                    "manager": "Spongebob",
                    "name": "Eugene Krabs",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="1"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="1_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Eugene Krabs
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-09-01
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "2",
                    "lastUpdated": "2019-08-29",
                    "manager": "Smitty",
                    "name": "Squidward Tentacles",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="2"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="2_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Squidward Tentacles
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Smitty
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-29
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1987-11-17",
                    "id": "3",
                    "lastUpdated": "2019-07-30",
                    "manager": "Patrick",
                    "name": "Sandy Cheeks",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="3"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="3_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sandy Cheeks
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1987-11-17
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patrick
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-07-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            3
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1975-06-23",
                    "id": "4",
                    "lastUpdated": "2019-08-16",
                    "manager": "Patchy",
                    "name": "Larry the Lobster",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="4"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="4_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Larry the Lobster
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1975-06-23
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patchy
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-16
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            4
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "5",
                    "lastUpdated": "2019-08-20",
                    "manager": "Spongebob",
                    "name": "Sheldon Plankton",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="5"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="5_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sheldon Plankton
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            5
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "6",
                    "lastUpdated": "2019-08-21",
                    "manager": "Spongebob",
                    "name": "Mrs. Puff",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="6"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="6_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Mrs. Puff
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            6
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1678-04-20",
                    "id": "7",
                    "lastUpdated": "2019-06-21",
                    "manager": "Spongebob",
                    "name": "Flying Dutchman",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="7"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="7_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Flying Dutchman
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1678-04-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-06-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            7
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </StyledComponent>
    </styled__StyledTable>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
  </div>
</Table>
`;

exports[`Table handlePageChange should invoke onPageChange on rows per page select 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "column": undefined,
        "order": undefined,
        "page": 0,
        "rowsPerPage": 20,
        "start": 0,
      },
      Object {
        "action": "select-option",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Table handlePageChange should invoke onPageChange on rows per page select 2`] = `
.c6 {
  background-color: #ffffff;
  border-collapse: collapse;
  border: none;
  table-layout: fixed;
  width: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
}

.c8 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
  width: 33%;
}

.c9 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c10 {
  background-color: #f0f0f7;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c12 {
  background-color: inherit;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c7 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c7 td,
.c7 th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 200;
}

.c11 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c2 {
  font-size: 14px;
  margin-right: 10px;
  width: 75px;
}

.c1 {
  color: #555e6f;
  display: inline-block;
  font-size: 14px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  margin: 5px 5px 5px 0;
  color: #8e929b;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.c5 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  opacity: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c4 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  min-width: 14px;
}

.c3 {
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  line-height: 18px;
  outline: none;
  padding: 10px 20px;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  white-space: nowrap;
  background-color: transparent;
  border-color: transparent;
  color: #6124e2;
}

.c3:hover {
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.1);
}

.c3:active {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.15);
}

.c3:disabled {
  cursor: not-allowed;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  border-color: transparent;
  color: #b6bbc7;
}

.c3:focus {
  box-shadow: rgba(0,0,0,0.15) 0 0 0 2px;
}

<Table
  data={
    Array [
      Object {
        "dob": "1942-11-30",
        "id": "1",
        "lastUpdated": "2019-09-01",
        "manager": "Spongebob",
        "name": "Eugene Krabs",
      },
      Object {
        "dob": "",
        "id": "2",
        "lastUpdated": "2019-08-29",
        "manager": "Smitty",
        "name": "Squidward Tentacles",
      },
      Object {
        "dob": "1987-11-17",
        "id": "3",
        "lastUpdated": "2019-07-30",
        "manager": "Patrick",
        "name": "Sandy Cheeks",
      },
      Object {
        "dob": "1975-06-23",
        "id": "4",
        "lastUpdated": "2019-08-16",
        "manager": "Patchy",
        "name": "Larry the Lobster",
      },
      Object {
        "dob": "1942-11-30",
        "id": "5",
        "lastUpdated": "2019-08-20",
        "manager": "Spongebob",
        "name": "Sheldon Plankton",
      },
      Object {
        "dob": "",
        "id": "6",
        "lastUpdated": "2019-08-21",
        "manager": "Spongebob",
        "name": "Mrs. Puff",
      },
      Object {
        "dob": "1678-04-20",
        "id": "7",
        "lastUpdated": "2019-06-21",
        "manager": "Spongebob",
        "name": "Flying Dutchman",
      },
    ]
  }
  headers={
    Array [
      Object {
        "cellStyle": Object {
          "width": "33%",
        },
        "key": "name",
        "label": "Subject Name",
      },
      Object {
        "key": "dob",
        "label": "Date of Birth",
      },
      Object {
        "key": "manager",
        "label": "Manager",
      },
      Object {
        "key": "lastUpdated",
        "label": "Last Updated",
      },
      Object {
        "key": "id",
        "label": "ID",
        "sortable": false,
      },
    ]
  }
  onPageChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "column": undefined,
            "order": undefined,
            "page": 0,
            "rowsPerPage": 20,
            "start": 0,
          },
          Object {
            "action": "select-option",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  paginated={true}
  rowsPerPageOptions={
    Array [
      5,
      20,
      50,
    ]
  }
>
  <div>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={5}
      rowsPerPageOptions={
        Array [
          5,
          20,
          50,
        ]
      }
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                subtle={true}
              >
                <label
                  className="c1"
                >
                  Rows per page
                </label>
              </StyledComponent>
            </Label>
            <styled__RowPerPageWrapper>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled__RowPerPageWrapper-r3xwjs-4",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "font-size:14px;margin-right:10px;width:75px;",
                      ],
                    },
                    "displayName": "styled__RowPerPageWrapper",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled__RowPerPageWrapper-r3xwjs-4",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c2"
                >
                  <Select
                    borderless={true}
                    defaultValue={
                      Object {
                        "label": "5",
                        "value": 5,
                      }
                    }
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "5",
                          "value": 5,
                        },
                        Object {
                          "label": "20",
                          "value": 20,
                        },
                        Object {
                          "label": "50",
                          "value": 50,
                        },
                      ]
                    }
                    useRawValues={true}
                    value={5}
                  >
                    <SelectController
                      borderless={true}
                      defaultValue={
                        Object {
                          "label": "5",
                          "value": 5,
                        }
                      }
                      hideDropdownIcon={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "5",
                            "value": 5,
                          },
                          Object {
                            "label": "20",
                            "value": 20,
                          },
                          Object {
                            "label": "50",
                            "value": 50,
                          },
                        ]
                      }
                      render={[Function]}
                      useRawValues={true}
                      value={5}
                    >
                      <StateManager
                        borderless={true}
                        components={
                          Object {
                            "DropdownIndicator": [Function],
                            "Option": [Function],
                            "ValueContainer": [Function],
                          }
                        }
                        defaultInputValue=""
                        defaultMenuIsOpen={false}
                        defaultValue={
                          Object {
                            "label": "5",
                            "value": 5,
                          }
                        }
                        filterOption={[Function]}
                        hideDropdownIcon={false}
                        menuPlacement="auto"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "5",
                              "value": 5,
                            },
                            Object {
                              "label": "20",
                              "value": 20,
                            },
                            Object {
                              "label": "50",
                              "value": 50,
                            },
                          ]
                        }
                        styles={
                          Object {
                            "clearIndicator": [Function],
                            "container": [Function],
                            "control": [Function],
                            "dropdownIndicator": [Function],
                            "indicatorSeparator": [Function],
                            "indicatorsContainer": [Function],
                            "menu": [Function],
                            "menuList": [Function],
                            "menuPortal": [Function],
                            "option": [Function],
                            "singleValue": [Function],
                            "valueContainer": [Function],
                          }
                        }
                        value={
                          Object {
                            "label": "5",
                            "value": 5,
                          }
                        }
                      >
                        <Select
                          backspaceRemovesValue={true}
                          blurInputOnSelect={true}
                          borderless={true}
                          captureMenuScroll={false}
                          closeMenuOnScroll={false}
                          closeMenuOnSelect={true}
                          components={
                            Object {
                              "DropdownIndicator": [Function],
                              "Option": [Function],
                              "ValueContainer": [Function],
                            }
                          }
                          controlShouldRenderValue={true}
                          escapeClearsValue={false}
                          filterOption={[Function]}
                          formatGroupLabel={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          hideDropdownIcon={false}
                          inputValue=""
                          isDisabled={false}
                          isLoading={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          isRtl={false}
                          isSearchable={true}
                          loadingMessage={[Function]}
                          maxMenuHeight={300}
                          menuIsOpen={false}
                          menuPlacement="auto"
                          menuPosition="absolute"
                          menuShouldBlockScroll={false}
                          menuShouldScrollIntoView={true}
                          minMenuHeight={140}
                          noOptionsMessage={[Function]}
                          onChange={[Function]}
                          onInputChange={[Function]}
                          onMenuClose={[Function]}
                          onMenuOpen={[Function]}
                          openMenuOnClick={true}
                          openMenuOnFocus={false}
                          options={
                            Array [
                              Object {
                                "label": "5",
                                "value": 5,
                              },
                              Object {
                                "label": "20",
                                "value": 20,
                              },
                              Object {
                                "label": "50",
                                "value": 50,
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="Select..."
                          screenReaderStatus={[Function]}
                          styles={
                            Object {
                              "clearIndicator": [Function],
                              "container": [Function],
                              "control": [Function],
                              "dropdownIndicator": [Function],
                              "indicatorSeparator": [Function],
                              "indicatorsContainer": [Function],
                              "menu": [Function],
                              "menuList": [Function],
                              "menuPortal": [Function],
                              "option": [Function],
                              "singleValue": [Function],
                              "valueContainer": [Function],
                            }
                          }
                          tabIndex="0"
                          tabSelectsValue={true}
                          value={
                            Object {
                              "label": "5",
                              "value": 5,
                            }
                          }
                        >
                          <SelectContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            innerProps={
                              Object {
                                "id": undefined,
                                "onKeyDown": [Function],
                              }
                            }
                            isDisabled={false}
                            isFocused={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "5",
                                  "value": 5,
                                },
                                Object {
                                  "label": "20",
                                  "value": 20,
                                },
                                Object {
                                  "label": "50",
                                  "value": 50,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "borderless": true,
                                "captureMenuScroll": false,
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {
                                  "DropdownIndicator": [Function],
                                  "Option": [Function],
                                  "ValueContainer": [Function],
                                },
                                "controlShouldRenderValue": true,
                                "dropdownIcon": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "hideDropdownIcon": false,
                                "inputIcon": undefined,
                                "inputValue": "",
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "auto",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "5",
                                    "value": 5,
                                  },
                                  Object {
                                    "label": "20",
                                    "value": 20,
                                  },
                                  Object {
                                    "label": "50",
                                    "value": 50,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "styles": Object {
                                  "clearIndicator": [Function],
                                  "container": [Function],
                                  "control": [Function],
                                  "dropdownIndicator": [Function],
                                  "indicatorSeparator": [Function],
                                  "indicatorsContainer": [Function],
                                  "menu": [Function],
                                  "menuList": [Function],
                                  "menuPortal": [Function],
                                  "option": [Function],
                                  "singleValue": [Function],
                                  "valueContainer": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "5",
                                  "value": 5,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className=""
                              css={
                                Object {
                                  "boxSizing": "border-box",
                                  "cursor": "default",
                                  "direction": null,
                                  "label": "container",
                                  "pointerEvents": "auto",
                                  "position": "relative",
                                  "width": "100%",
                                }
                              }
                              onKeyDown={[Function]}
                            >
                              <div
                                className=" css-gprrux-container"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "5",
                                        "value": 5,
                                      },
                                      Object {
                                        "label": "20",
                                        "value": 20,
                                      },
                                      Object {
                                        "label": "50",
                                        "value": 50,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "borderless": true,
                                      "captureMenuScroll": false,
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "DropdownIndicator": [Function],
                                        "Option": [Function],
                                        "ValueContainer": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "dropdownIcon": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "hideDropdownIcon": false,
                                      "inputIcon": undefined,
                                      "inputValue": "",
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "auto",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "5",
                                          "value": 5,
                                        },
                                        Object {
                                          "label": "20",
                                          "value": 20,
                                        },
                                        Object {
                                          "label": "50",
                                          "value": 50,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "styles": Object {
                                        "clearIndicator": [Function],
                                        "container": [Function],
                                        "control": [Function],
                                        "dropdownIndicator": [Function],
                                        "indicatorSeparator": [Function],
                                        "indicatorsContainer": [Function],
                                        "menu": [Function],
                                        "menuList": [Function],
                                        "menuPortal": [Function],
                                        "option": [Function],
                                        "singleValue": [Function],
                                        "valueContainer": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "5",
                                        "value": 5,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className=""
                                    css={
                                      Object {
                                        "&:hover": Object {
                                          "borderColor": "hsl(0, 0%, 70%)",
                                        },
                                        ":hover": Object {
                                          "backgroundColor": "#f0f0f7",
                                          "border": "none",
                                        },
                                        "alignItems": "center",
                                        "backgroundColor": "transparent",
                                        "border": "none",
                                        "borderColor": "hsl(0, 0%, 80%)",
                                        "borderRadius": "3px",
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "boxShadow": "none",
                                        "boxSizing": "border-box",
                                        "cursor": "default",
                                        "display": "flex",
                                        "flexWrap": "wrap",
                                        "fontSize": "14px",
                                        "justifyContent": "space-between",
                                        "label": "control",
                                        "lineHeight": 1.5,
                                        "minHeight": "40px",
                                        "outline": "0 !important",
                                        "pointerEvents": "auto",
                                        "position": "relative",
                                        "transition": "background-color 0.2s ease-out, border-color 0.2s ease-out",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      className=" css-1ugvnb2-control"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <ValueContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        inputIcon={null}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={
                                          Array [
                                            Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                            Object {
                                              "label": "20",
                                              "value": 20,
                                            },
                                            Object {
                                              "label": "50",
                                              "value": 50,
                                            },
                                          ]
                                        }
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "borderless": true,
                                            "captureMenuScroll": false,
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "DropdownIndicator": [Function],
                                              "Option": [Function],
                                              "ValueContainer": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "dropdownIcon": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "hideDropdownIcon": false,
                                            "inputIcon": undefined,
                                            "inputValue": "",
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "auto",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "noOptionsMessage": [Function],
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [
                                              Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                              Object {
                                                "label": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "label": "50",
                                                "value": 50,
                                              },
                                            ],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "styles": Object {
                                              "clearIndicator": [Function],
                                              "container": [Function],
                                              "control": [Function],
                                              "dropdownIndicator": [Function],
                                              "indicatorSeparator": [Function],
                                              "indicatorsContainer": [Function],
                                              "menu": [Function],
                                              "menuList": [Function],
                                              "menuPortal": [Function],
                                              "option": [Function],
                                              "singleValue": [Function],
                                              "valueContainer": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <ValueContainer
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          inputIcon={null}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                              Object {
                                                "label": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "label": "50",
                                                "value": 50,
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "borderless": true,
                                              "captureMenuScroll": false,
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "Option": [Function],
                                                "ValueContainer": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "dropdownIcon": undefined,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideDropdownIcon": false,
                                              "inputIcon": undefined,
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "auto",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "5",
                                                  "value": 5,
                                                },
                                                Object {
                                                  "label": "20",
                                                  "value": 20,
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": 50,
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "container": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "indicatorSeparator": [Function],
                                                "indicatorsContainer": [Function],
                                                "menu": [Function],
                                                "menuList": [Function],
                                                "menuPortal": [Function],
                                                "option": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "value": Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className=""
                                            css={
                                              Object {
                                                "WebkitOverflowScrolling": "touch",
                                                "alignItems": "center",
                                                "boxSizing": "border-box",
                                                "display": "flex",
                                                "flex": 1,
                                                "flexWrap": "wrap",
                                                "overflow": "hidden",
                                                "padding": "0 10px",
                                                "position": "relative",
                                              }
                                            }
                                          >
                                            <div
                                              className=" css-1gbz4ua"
                                            >
                                              <SingleValue
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                data={
                                                  Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  }
                                                }
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={true}
                                                isDisabled={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "borderless": true,
                                                    "captureMenuScroll": false,
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "Option": [Function],
                                                      "ValueContainer": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "dropdownIcon": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "hideDropdownIcon": false,
                                                    "inputIcon": undefined,
                                                    "inputValue": "",
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "auto",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "noOptionsMessage": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "5",
                                                        "value": 5,
                                                      },
                                                      Object {
                                                        "label": "20",
                                                        "value": 20,
                                                      },
                                                      Object {
                                                        "label": "50",
                                                        "value": 50,
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "clearIndicator": [Function],
                                                      "container": [Function],
                                                      "control": [Function],
                                                      "dropdownIndicator": [Function],
                                                      "indicatorSeparator": [Function],
                                                      "indicatorsContainer": [Function],
                                                      "menu": [Function],
                                                      "menuList": [Function],
                                                      "menuPortal": [Function],
                                                      "option": [Function],
                                                      "singleValue": [Function],
                                                      "valueContainer": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  className=""
                                                  css={
                                                    Object {
                                                      "boxSizing": "border-box",
                                                      "color": "inherit",
                                                      "label": "singleValue",
                                                      "marginLeft": 2,
                                                      "marginRight": 2,
                                                      "maxWidth": "calc(100% - 8px)",
                                                      "overflow": "hidden",
                                                      "position": "absolute",
                                                      "textOverflow": "ellipsis",
                                                      "top": "50%",
                                                      "transform": "translateY(-50%)",
                                                      "whiteSpace": "nowrap",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className=" css-1xqm9c7-singleValue"
                                                  >
                                                    5
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </SingleValue>
                                              <Input
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                id="react-select-2-input"
                                                innerRef={[Function]}
                                                isDisabled={false}
                                                isHidden={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "borderless": true,
                                                    "captureMenuScroll": false,
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "Option": [Function],
                                                      "ValueContainer": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "dropdownIcon": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "hideDropdownIcon": false,
                                                    "inputIcon": undefined,
                                                    "inputValue": "",
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "auto",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "noOptionsMessage": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "5",
                                                        "value": 5,
                                                      },
                                                      Object {
                                                        "label": "20",
                                                        "value": 20,
                                                      },
                                                      Object {
                                                        "label": "50",
                                                        "value": 50,
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "clearIndicator": [Function],
                                                      "container": [Function],
                                                      "control": [Function],
                                                      "dropdownIndicator": [Function],
                                                      "indicatorSeparator": [Function],
                                                      "indicatorsContainer": [Function],
                                                      "menu": [Function],
                                                      "menuList": [Function],
                                                      "menuPortal": [Function],
                                                      "option": [Function],
                                                      "singleValue": [Function],
                                                      "valueContainer": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                  }
                                                }
                                                spellCheck="false"
                                                tabIndex="0"
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  css={
                                                    Object {
                                                      "boxSizing": "border-box",
                                                      "color": "hsl(0, 0%, 20%)",
                                                      "margin": 2,
                                                      "paddingBottom": 2,
                                                      "paddingTop": 2,
                                                      "visibility": "visible",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-b8ldur-Input"
                                                  >
                                                    <AutosizeInput
                                                      aria-autocomplete="list"
                                                      autoCapitalize="none"
                                                      autoComplete="off"
                                                      autoCorrect="off"
                                                      className=""
                                                      disabled={false}
                                                      id="react-select-2-input"
                                                      injectStyles={true}
                                                      inputRef={[Function]}
                                                      inputStyle={
                                                        Object {
                                                          "background": 0,
                                                          "border": 0,
                                                          "color": "inherit",
                                                          "fontSize": "inherit",
                                                          "label": "input",
                                                          "opacity": 1,
                                                          "outline": 0,
                                                          "padding": 0,
                                                        }
                                                      }
                                                      minWidth={1}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      spellCheck="false"
                                                      tabIndex="0"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className=""
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                          }
                                                        }
                                                      >
                                                        <input
                                                          aria-autocomplete="list"
                                                          autoCapitalize="none"
                                                          autoComplete="off"
                                                          autoCorrect="off"
                                                          disabled={false}
                                                          id="react-select-2-input"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          spellCheck="false"
                                                          style={
                                                            Object {
                                                              "background": 0,
                                                              "border": 0,
                                                              "boxSizing": "content-box",
                                                              "color": "inherit",
                                                              "fontSize": "inherit",
                                                              "label": "input",
                                                              "opacity": 1,
                                                              "outline": 0,
                                                              "padding": 0,
                                                              "width": "2px",
                                                            }
                                                          }
                                                          tabIndex="0"
                                                          type="text"
                                                          value=""
                                                        />
                                                        <div
                                                          style={
                                                            Object {
                                                              "height": 0,
                                                              "left": 0,
                                                              "overflow": "scroll",
                                                              "position": "absolute",
                                                              "top": 0,
                                                              "visibility": "hidden",
                                                              "whiteSpace": "pre",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </AutosizeInput>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </Input>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </ValueContainer>
                                      </ValueContainer>
                                      <IndicatorsContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={
                                          Array [
                                            Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                            Object {
                                              "label": "20",
                                              "value": 20,
                                            },
                                            Object {
                                              "label": "50",
                                              "value": 50,
                                            },
                                          ]
                                        }
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "borderless": true,
                                            "captureMenuScroll": false,
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "DropdownIndicator": [Function],
                                              "Option": [Function],
                                              "ValueContainer": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "dropdownIcon": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "hideDropdownIcon": false,
                                            "inputIcon": undefined,
                                            "inputValue": "",
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "auto",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "noOptionsMessage": [Function],
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [
                                              Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                              Object {
                                                "label": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "label": "50",
                                                "value": 50,
                                              },
                                            ],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "styles": Object {
                                              "clearIndicator": [Function],
                                              "container": [Function],
                                              "control": [Function],
                                              "dropdownIndicator": [Function],
                                              "indicatorSeparator": [Function],
                                              "indicatorsContainer": [Function],
                                              "menu": [Function],
                                              "menuList": [Function],
                                              "menuPortal": [Function],
                                              "option": [Function],
                                              "singleValue": [Function],
                                              "valueContainer": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <EmotionCssPropInternal
                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                          className=""
                                          css={
                                            Object {
                                              "alignItems": "center",
                                              "alignSelf": "stretch",
                                              "boxSizing": "border-box",
                                              "color": "#b6bbc7",
                                              "display": "flex",
                                              "flexShrink": 0,
                                              "marginRight": "5px",
                                            }
                                          }
                                        >
                                          <div
                                            className=" css-1y4h2k2-IndicatorsContainer"
                                          >
                                            <IndicatorSeparator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={
                                                Array [
                                                  Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                  Object {
                                                    "label": "20",
                                                    "value": 20,
                                                  },
                                                  Object {
                                                    "label": "50",
                                                    "value": 50,
                                                  },
                                                ]
                                              }
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "borderless": true,
                                                  "captureMenuScroll": false,
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "DropdownIndicator": [Function],
                                                    "Option": [Function],
                                                    "ValueContainer": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "dropdownIcon": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "hideDropdownIcon": false,
                                                  "inputIcon": undefined,
                                                  "inputValue": "",
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "auto",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "noOptionsMessage": [Function],
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "styles": Object {
                                                    "clearIndicator": [Function],
                                                    "container": [Function],
                                                    "control": [Function],
                                                    "dropdownIndicator": [Function],
                                                    "indicatorSeparator": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "menu": [Function],
                                                    "menuList": [Function],
                                                    "menuPortal": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                className=""
                                                css={
                                                  Object {
                                                    "display": "none",
                                                  }
                                                }
                                              >
                                                <span
                                                  className=" css-1xjgjl1-IndicatorSeparator"
                                                />
                                              </EmotionCssPropInternal>
                                            </IndicatorSeparator>
                                            <LUKDropdownIndicator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              innerProps={
                                                Object {
                                                  "aria-hidden": "true",
                                                  "onMouseDown": [Function],
                                                  "onTouchEnd": [Function],
                                                }
                                              }
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={
                                                Array [
                                                  Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                  Object {
                                                    "label": "20",
                                                    "value": 20,
                                                  },
                                                  Object {
                                                    "label": "50",
                                                    "value": 50,
                                                  },
                                                ]
                                              }
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "borderless": true,
                                                  "captureMenuScroll": false,
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "DropdownIndicator": [Function],
                                                    "Option": [Function],
                                                    "ValueContainer": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "dropdownIcon": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "hideDropdownIcon": false,
                                                  "inputIcon": undefined,
                                                  "inputValue": "",
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "auto",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "noOptionsMessage": [Function],
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "styles": Object {
                                                    "clearIndicator": [Function],
                                                    "container": [Function],
                                                    "control": [Function],
                                                    "dropdownIndicator": [Function],
                                                    "indicatorSeparator": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "menu": [Function],
                                                    "menuList": [Function],
                                                    "menuPortal": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <DropdownIndicator
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={true}
                                                innerProps={
                                                  Object {
                                                    "aria-hidden": "true",
                                                    "onMouseDown": [Function],
                                                    "onTouchEnd": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "borderless": true,
                                                    "captureMenuScroll": false,
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "Option": [Function],
                                                      "ValueContainer": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "dropdownIcon": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "hideDropdownIcon": false,
                                                    "inputIcon": undefined,
                                                    "inputValue": "",
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "auto",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "noOptionsMessage": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "5",
                                                        "value": 5,
                                                      },
                                                      Object {
                                                        "label": "20",
                                                        "value": 20,
                                                      },
                                                      Object {
                                                        "label": "50",
                                                        "value": 50,
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "clearIndicator": [Function],
                                                      "container": [Function],
                                                      "control": [Function],
                                                      "dropdownIndicator": [Function],
                                                      "indicatorSeparator": [Function],
                                                      "indicatorsContainer": [Function],
                                                      "menu": [Function],
                                                      "menuList": [Function],
                                                      "menuPortal": [Function],
                                                      "option": [Function],
                                                      "singleValue": [Function],
                                                      "valueContainer": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  aria-hidden="true"
                                                  className=""
                                                  css={
                                                    Object {
                                                      "color": "#b6bbc7",
                                                      "display": "flex",
                                                      "margin": "5px",
                                                      "padding": "0",
                                                    }
                                                  }
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                >
                                                  <div
                                                    aria-hidden="true"
                                                    className=" css-1vd5qh6-DropdownIndicator"
                                                    onMouseDown={[Function]}
                                                    onTouchEnd={[Function]}
                                                  >
                                                    <DownChevron>
                                                      <Svg
                                                        size={20}
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                          aria-hidden="true"
                                                          css={
                                                            Object {
                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGljYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JJIiwiZmlsZSI6ImluZGljYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyB0eXBlIE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3gsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgdHlwZSB7IENvbW1vblByb3BzLCBUaGVtZSB9IGZyb20gJy4uL3R5cGVzJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEcm9wZG93biAmIENsZWFyIEljb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgU3ZnID0gKHsgc2l6ZSwgLi4ucHJvcHMgfTogeyBzaXplOiBudW1iZXIgfSkgPT4gKFxuICA8c3ZnXG4gICAgaGVpZ2h0PXtzaXplfVxuICAgIHdpZHRoPXtzaXplfVxuICAgIHZpZXdCb3g9XCIwIDAgMjAgMjBcIlxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgZm9jdXNhYmxlPVwiZmFsc2VcIlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBmaWxsOiAnY3VycmVudENvbG9yJyxcbiAgICAgIGxpbmVIZWlnaHQ6IDEsXG4gICAgICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICAgICAgc3Ryb2tlV2lkdGg6IDAsXG4gICAgfX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQ3Jvc3NJY29uID0gKHByb3BzOiBhbnkpID0+IChcbiAgPFN2ZyBzaXplPXsyMH0gey4uLnByb3BzfT5cbiAgICA8cGF0aCBkPVwiTTE0LjM0OCAxNC44NDljLTAuNDY5IDAuNDY5LTEuMjI5IDAuNDY5LTEuNjk3IDBsLTIuNjUxLTMuMDMwLTIuNjUxIDMuMDI5Yy0wLjQ2OSAwLjQ2OS0xLjIyOSAwLjQ2OS0xLjY5NyAwLTAuNDY5LTAuNDY5LTAuNDY5LTEuMjI5IDAtMS42OTdsMi43NTgtMy4xNS0yLjc1OS0zLjE1MmMtMC40NjktMC40NjktMC40NjktMS4yMjggMC0xLjY5N3MxLjIyOC0wLjQ2OSAxLjY5NyAwbDIuNjUyIDMuMDMxIDIuNjUxLTMuMDMxYzAuNDY5LTAuNDY5IDEuMjI4LTAuNDY5IDEuNjk3IDBzMC40NjkgMS4yMjkgMCAxLjY5N2wtMi43NTggMy4xNTIgMi43NTggMy4xNWMwLjQ2OSAwLjQ2OSAwLjQ2OSAxLjIyOSAwIDEuNjk4elwiIC8+XG4gIDwvU3ZnPlxuKTtcbmV4cG9ydCBjb25zdCBEb3duQ2hldnJvbiA9IChwcm9wczogYW55KSA9PiAoXG4gIDxTdmcgc2l6ZT17MjB9IHsuLi5wcm9wc30+XG4gICAgPHBhdGggZD1cIk00LjUxNiA3LjU0OGMwLjQzNi0wLjQ0NiAxLjA0My0wLjQ4MSAxLjU3NiAwbDMuOTA4IDMuNzQ3IDMuOTA4LTMuNzQ3YzAuNTMzLTAuNDgxIDEuMTQxLTAuNDQ2IDEuNTc0IDAgMC40MzYgMC40NDUgMC40MDggMS4xOTcgMCAxLjYxNS0wLjQwNiAwLjQxOC00LjY5NSA0LjUwMi00LjY5NSA0LjUwMi0wLjIxNyAwLjIyMy0wLjUwMiAwLjMzNS0wLjc4NyAwLjMzNXMtMC41Ny0wLjExMi0wLjc4OS0wLjMzNWMwIDAtNC4yODctNC4wODQtNC42OTUtNC41MDJzLTAuNDM2LTEuMTcgMC0xLjYxNXpcIiAvPlxuICA8L1N2Zz5cbik7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRHJvcGRvd24gJiBDbGVhciBCdXR0b25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHR5cGUgSW5kaWNhdG9yUHJvcHMgPSBDb21tb25Qcm9wcyAmIHtcbiAgLyoqIFRoZSBjaGlsZHJlbiB0byBiZSByZW5kZXJlZCBpbnNpZGUgdGhlIGluZGljYXRvci4gKi9cbiAgY2hpbGRyZW46IE5vZGUsXG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufTtcblxuY29uc3QgYmFzZUNTUyA9ICh7XG4gIGlzRm9jdXNlZCxcbiAgdGhlbWU6IHtcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gICAgY29sb3JzLFxuICB9LFxufTogSW5kaWNhdG9yUHJvcHMpID0+ICh7XG4gIGxhYmVsOiAnaW5kaWNhdG9yQ29udGFpbmVyJyxcbiAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsNjAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICBkaXNwbGF5OiAnZmxleCcsXG4gIHBhZGRpbmc6IGJhc2VVbml0ICogMixcbiAgdHJhbnNpdGlvbjogJ2NvbG9yIDE1MG1zJyxcblxuICAnOmhvdmVyJzoge1xuICAgIGNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMubmV1dHJhbDgwIDogY29sb3JzLm5ldXRyYWw0MCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgZHJvcGRvd25JbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IERyb3Bkb3duSW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2Ryb3Bkb3duSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnZHJvcGRvd24taW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8RG93bkNoZXZyb24gLz59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2xlYXJJbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IENsZWFySW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2NsZWFySW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnY2xlYXItaW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8Q3Jvc3NJY29uIC8+fVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTZXBhcmF0b3Jcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG50eXBlIFNlcGFyYXRvclN0YXRlID0geyBpc0Rpc2FibGVkOiBib29sZWFuIH07XG5cbmV4cG9ydCBjb25zdCBpbmRpY2F0b3JTZXBhcmF0b3JDU1MgPSAoe1xuICBpc0Rpc2FibGVkLFxuICB0aGVtZToge1xuICAgIHNwYWNpbmc6IHsgYmFzZVVuaXQgfSxcbiAgICBjb2xvcnMsXG4gIH0sXG59OiBDb21tb25Qcm9wcyAmIFNlcGFyYXRvclN0YXRlKSA9PiAoe1xuICBsYWJlbDogJ2luZGljYXRvclNlcGFyYXRvcicsXG4gIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDEwIDogY29sb3JzLm5ldXRyYWwyMCxcbiAgbWFyZ2luQm90dG9tOiBiYXNlVW5pdCAqIDIsXG4gIG1hcmdpblRvcDogYmFzZVVuaXQgKiAyLFxuICB3aWR0aDogMSxcbn0pO1xuXG5leHBvcnQgY29uc3QgSW5kaWNhdG9yU2VwYXJhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgY3gsIGdldFN0eWxlcywgaW5uZXJQcm9wcyB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPHNwYW5cbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2luZGljYXRvclNlcGFyYXRvcicsIHByb3BzKX1cbiAgICAgIGNsYXNzTmFtZT17Y3goeyAnaW5kaWNhdG9yLXNlcGFyYXRvcic6IHRydWUgfSwgY2xhc3NOYW1lKX1cbiAgICAvPlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMb2FkaW5nXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgbG9hZGluZ0RvdEFuaW1hdGlvbnMgPSBrZXlmcmFtZXNgXG4gIDAlLCA4MCUsIDEwMCUgeyBvcGFjaXR5OiAwOyB9XG4gIDQwJSB7IG9wYWNpdHk6IDE7IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBsb2FkaW5nSW5kaWNhdG9yQ1NTID0gKHtcbiAgaXNGb2N1c2VkLFxuICBzaXplLFxuICB0aGVtZToge1xuICAgIGNvbG9ycyxcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gIH0sXG59OiB7XG4gIGlzRm9jdXNlZDogYm9vbGVhbixcbiAgc2l6ZTogbnVtYmVyLFxuICB0aGVtZTogVGhlbWUsXG59KSA9PiAoe1xuICBsYWJlbDogJ2xvYWRpbmdJbmRpY2F0b3InLFxuICBjb2xvcjogaXNGb2N1c2VkID8gY29sb3JzLm5ldXRyYWw2MCA6IGNvbG9ycy5uZXV0cmFsMjAsXG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgcGFkZGluZzogYmFzZVVuaXQgKiAyLFxuICB0cmFuc2l0aW9uOiAnY29sb3IgMTUwbXMnLFxuICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICBmb250U2l6ZTogc2l6ZSxcbiAgbGluZUhlaWdodDogMSxcbiAgbWFyZ2luUmlnaHQ6IHNpemUsXG4gIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxufSk7XG5cbnR5cGUgRG90UHJvcHMgPSB7IGRlbGF5OiBudW1iZXIsIG9mZnNldDogYm9vbGVhbiB9O1xuY29uc3QgTG9hZGluZ0RvdCA9ICh7IGRlbGF5LCBvZmZzZXQgfTogRG90UHJvcHMpID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGFuaW1hdGlvbjogYCR7bG9hZGluZ0RvdEFuaW1hdGlvbnN9IDFzIGVhc2UtaW4tb3V0ICR7ZGVsYXl9bXMgaW5maW5pdGU7YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2N1cnJlbnRDb2xvcicsXG4gICAgICBib3JkZXJSYWRpdXM6ICcxZW0nLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBtYXJnaW5MZWZ0OiBvZmZzZXQgPyAnMWVtJyA6IG51bGwsXG4gICAgICBoZWlnaHQ6ICcxZW0nLFxuICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsXG4gICAgICB3aWR0aDogJzFlbScsXG4gICAgfX1cbiAgLz5cbik7XG5cbmV4cG9ydCB0eXBlIExvYWRpbmdJY29uUHJvcHMgPSB7XG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufSAmIENvbW1vblByb3BzICYge1xuICAgIC8qKiBTZXQgc2l6ZSBvZiB0aGUgY29udGFpbmVyLiAqL1xuICAgIHNpemU6IG51bWJlcixcbiAgfTtcbmV4cG9ydCBjb25zdCBMb2FkaW5nSW5kaWNhdG9yID0gKHByb3BzOiBMb2FkaW5nSWNvblByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lLCBjeCwgZ2V0U3R5bGVzLCBpbm5lclByb3BzLCBpc1J0bCB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICB7Li4uaW5uZXJQcm9wc31cbiAgICAgIGNzcz17Z2V0U3R5bGVzKCdsb2FkaW5nSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnbG9hZGluZy1pbmRpY2F0b3InOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgPlxuICAgICAgPExvYWRpbmdEb3QgZGVsYXk9ezB9IG9mZnNldD17aXNSdGx9IC8+XG4gICAgICA8TG9hZGluZ0RvdCBkZWxheT17MTYwfSBvZmZzZXQgLz5cbiAgICAgIDxMb2FkaW5nRG90IGRlbGF5PXszMjB9IG9mZnNldD17IWlzUnRsfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbkxvYWRpbmdJbmRpY2F0b3IuZGVmYXVsdFByb3BzID0geyBzaXplOiA0IH07XG4iXX0= */",
                                                              "name": "19bqh2r",
                                                              "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                            }
                                                          }
                                                          focusable="false"
                                                          height={20}
                                                          viewBox="0 0 20 20"
                                                          width={20}
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="css-6q0nyr-Svg"
                                                            focusable="false"
                                                            height={20}
                                                            viewBox="0 0 20 20"
                                                            width={20}
                                                          >
                                                            <path
                                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                            />
                                                          </svg>
                                                        </EmotionCssPropInternal>
                                                      </Svg>
                                                    </DownChevron>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </DropdownIndicator>
                                            </LUKDropdownIndicator>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </IndicatorsContainer>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Control>
                              </div>
                            </EmotionCssPropInternal>
                          </SelectContainer>
                        </Select>
                      </StateManager>
                    </SelectController>
                  </Select>
                </div>
              </StyledComponent>
            </styled__RowPerPageWrapper>
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 5 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c3"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c4"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c5"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={false}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={false}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={false}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={false}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c3"
                      disabled={false}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c4"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c5"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
    <styled__StyledTable>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__StyledTable-r3xwjs-0",
              "isStatic": false,
              "lastClassName": "c6",
              "rules": Array [
                "background-color:",
                "#ffffff",
                ";border-collapse:collapse;border:none;table-layout:fixed;width:100%;",
              ],
            },
            "displayName": "styled__StyledTable",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__StyledTable-r3xwjs-0",
            "target": "table",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <table
          className="c6"
        >
          <TableHeader
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c12",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            onSort={[Function]}
            order={false}
            sticky={true}
          >
            <thead>
              <styled__StyledRow
                sticky={true}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__StyledRow-r3xwjs-3",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          "background-color:",
                          "#ffffff",
                          ";border-bottom:1px solid ",
                          "#dcdce7",
                          ";td,th{",
                          [Function],
                          "};",
                        ],
                      },
                      "displayName": "styled__StyledRow",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__StyledRow-r3xwjs-3",
                      "target": "tr",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  sticky={true}
                >
                  <tr
                    className="c7"
                  >
                    <HeadCell
                      cellStyle={
                        Object {
                          "width": "33%",
                        }
                      }
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="name"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={
                          Object {
                            "width": "33%",
                          }
                        }
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={
                            Object {
                              "width": "33%",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Subject Name
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="dob"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c9"
                            onClick={[Function]}
                          >
                            Date of Birth
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="manager"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c9"
                            onClick={[Function]}
                          >
                            Manager
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="lastUpdated"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c9"
                            onClick={[Function]}
                          >
                            Last Updated
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="id"
                      order={false}
                      sortable={false}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <th
                            className="c10"
                          >
                            ID
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                  </tr>
                </StyledComponent>
              </styled__StyledRow>
            </thead>
          </TableHeader>
          <TableBody
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c12",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            data={
              Array [
                Object {
                  "dob": "1942-11-30",
                  "id": "1",
                  "lastUpdated": "2019-09-01",
                  "manager": "Spongebob",
                  "name": "Eugene Krabs",
                },
                Object {
                  "dob": "",
                  "id": "2",
                  "lastUpdated": "2019-08-29",
                  "manager": "Smitty",
                  "name": "Squidward Tentacles",
                },
                Object {
                  "dob": "1987-11-17",
                  "id": "3",
                  "lastUpdated": "2019-07-30",
                  "manager": "Patrick",
                  "name": "Sandy Cheeks",
                },
                Object {
                  "dob": "1975-06-23",
                  "id": "4",
                  "lastUpdated": "2019-08-16",
                  "manager": "Patchy",
                  "name": "Larry the Lobster",
                },
                Object {
                  "dob": "1942-11-30",
                  "id": "5",
                  "lastUpdated": "2019-08-20",
                  "manager": "Spongebob",
                  "name": "Sheldon Plankton",
                },
                Object {
                  "dob": "",
                  "id": "6",
                  "lastUpdated": "2019-08-21",
                  "manager": "Spongebob",
                  "name": "Mrs. Puff",
                },
                Object {
                  "dob": "1678-04-20",
                  "id": "7",
                  "lastUpdated": "2019-06-21",
                  "manager": "Spongebob",
                  "name": "Flying Dutchman",
                },
              ]
            }
            exact={false}
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            page={0}
            rowsPerPage={5}
          >
            <tbody>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c12",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "1",
                    "lastUpdated": "2019-09-01",
                    "manager": "Spongebob",
                    "name": "Eugene Krabs",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="1"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c11"
                    >
                      <Cell
                        key="1_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Eugene Krabs
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            2019-09-01
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            1
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c12",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "2",
                    "lastUpdated": "2019-08-29",
                    "manager": "Smitty",
                    "name": "Squidward Tentacles",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="2"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c11"
                    >
                      <Cell
                        key="2_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Squidward Tentacles
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Smitty
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            2019-08-29
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            2
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c12",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1987-11-17",
                    "id": "3",
                    "lastUpdated": "2019-07-30",
                    "manager": "Patrick",
                    "name": "Sandy Cheeks",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="3"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c11"
                    >
                      <Cell
                        key="3_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Sandy Cheeks
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            1987-11-17
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Patrick
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            2019-07-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            3
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c12",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1975-06-23",
                    "id": "4",
                    "lastUpdated": "2019-08-16",
                    "manager": "Patchy",
                    "name": "Larry the Lobster",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="4"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c11"
                    >
                      <Cell
                        key="4_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Larry the Lobster
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            1975-06-23
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Patchy
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            2019-08-16
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            4
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c12",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "5",
                    "lastUpdated": "2019-08-20",
                    "manager": "Spongebob",
                    "name": "Sheldon Plankton",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="5"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c11"
                    >
                      <Cell
                        key="5_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Sheldon Plankton
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            2019-08-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c12",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c12"
                          >
                            5
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </StyledComponent>
    </styled__StyledTable>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={5}
      rowsPerPageOptions={
        Array [
          5,
          20,
          50,
        ]
      }
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                subtle={true}
              >
                <label
                  className="c1"
                >
                  Rows per page
                </label>
              </StyledComponent>
            </Label>
            <styled__RowPerPageWrapper>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled__RowPerPageWrapper-r3xwjs-4",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "font-size:14px;margin-right:10px;width:75px;",
                      ],
                    },
                    "displayName": "styled__RowPerPageWrapper",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled__RowPerPageWrapper-r3xwjs-4",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c2"
                >
                  <Select
                    borderless={true}
                    defaultValue={
                      Object {
                        "label": "5",
                        "value": 5,
                      }
                    }
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "5",
                          "value": 5,
                        },
                        Object {
                          "label": "20",
                          "value": 20,
                        },
                        Object {
                          "label": "50",
                          "value": 50,
                        },
                      ]
                    }
                    useRawValues={true}
                    value={5}
                  >
                    <SelectController
                      borderless={true}
                      defaultValue={
                        Object {
                          "label": "5",
                          "value": 5,
                        }
                      }
                      hideDropdownIcon={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "5",
                            "value": 5,
                          },
                          Object {
                            "label": "20",
                            "value": 20,
                          },
                          Object {
                            "label": "50",
                            "value": 50,
                          },
                        ]
                      }
                      render={[Function]}
                      useRawValues={true}
                      value={5}
                    >
                      <StateManager
                        borderless={true}
                        components={
                          Object {
                            "DropdownIndicator": [Function],
                            "Option": [Function],
                            "ValueContainer": [Function],
                          }
                        }
                        defaultInputValue=""
                        defaultMenuIsOpen={false}
                        defaultValue={
                          Object {
                            "label": "5",
                            "value": 5,
                          }
                        }
                        filterOption={[Function]}
                        hideDropdownIcon={false}
                        menuPlacement="auto"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "5",
                              "value": 5,
                            },
                            Object {
                              "label": "20",
                              "value": 20,
                            },
                            Object {
                              "label": "50",
                              "value": 50,
                            },
                          ]
                        }
                        styles={
                          Object {
                            "clearIndicator": [Function],
                            "container": [Function],
                            "control": [Function],
                            "dropdownIndicator": [Function],
                            "indicatorSeparator": [Function],
                            "indicatorsContainer": [Function],
                            "menu": [Function],
                            "menuList": [Function],
                            "menuPortal": [Function],
                            "option": [Function],
                            "singleValue": [Function],
                            "valueContainer": [Function],
                          }
                        }
                        value={
                          Object {
                            "label": "5",
                            "value": 5,
                          }
                        }
                      >
                        <Select
                          backspaceRemovesValue={true}
                          blurInputOnSelect={true}
                          borderless={true}
                          captureMenuScroll={false}
                          closeMenuOnScroll={false}
                          closeMenuOnSelect={true}
                          components={
                            Object {
                              "DropdownIndicator": [Function],
                              "Option": [Function],
                              "ValueContainer": [Function],
                            }
                          }
                          controlShouldRenderValue={true}
                          escapeClearsValue={false}
                          filterOption={[Function]}
                          formatGroupLabel={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          hideDropdownIcon={false}
                          inputValue=""
                          isDisabled={false}
                          isLoading={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          isRtl={false}
                          isSearchable={true}
                          loadingMessage={[Function]}
                          maxMenuHeight={300}
                          menuIsOpen={false}
                          menuPlacement="auto"
                          menuPosition="absolute"
                          menuShouldBlockScroll={false}
                          menuShouldScrollIntoView={true}
                          minMenuHeight={140}
                          noOptionsMessage={[Function]}
                          onChange={[Function]}
                          onInputChange={[Function]}
                          onMenuClose={[Function]}
                          onMenuOpen={[Function]}
                          openMenuOnClick={true}
                          openMenuOnFocus={false}
                          options={
                            Array [
                              Object {
                                "label": "5",
                                "value": 5,
                              },
                              Object {
                                "label": "20",
                                "value": 20,
                              },
                              Object {
                                "label": "50",
                                "value": 50,
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="Select..."
                          screenReaderStatus={[Function]}
                          styles={
                            Object {
                              "clearIndicator": [Function],
                              "container": [Function],
                              "control": [Function],
                              "dropdownIndicator": [Function],
                              "indicatorSeparator": [Function],
                              "indicatorsContainer": [Function],
                              "menu": [Function],
                              "menuList": [Function],
                              "menuPortal": [Function],
                              "option": [Function],
                              "singleValue": [Function],
                              "valueContainer": [Function],
                            }
                          }
                          tabIndex="0"
                          tabSelectsValue={true}
                          value={
                            Object {
                              "label": "5",
                              "value": 5,
                            }
                          }
                        >
                          <SelectContainer
                            clearValue={[Function]}
                            cx={[Function]}
                            getStyles={[Function]}
                            getValue={[Function]}
                            hasValue={true}
                            innerProps={
                              Object {
                                "id": undefined,
                                "onKeyDown": [Function],
                              }
                            }
                            isDisabled={false}
                            isFocused={false}
                            isMulti={false}
                            isRtl={false}
                            options={
                              Array [
                                Object {
                                  "label": "5",
                                  "value": 5,
                                },
                                Object {
                                  "label": "20",
                                  "value": 20,
                                },
                                Object {
                                  "label": "50",
                                  "value": 50,
                                },
                              ]
                            }
                            selectOption={[Function]}
                            selectProps={
                              Object {
                                "backspaceRemovesValue": true,
                                "blurInputOnSelect": true,
                                "borderless": true,
                                "captureMenuScroll": false,
                                "closeMenuOnScroll": false,
                                "closeMenuOnSelect": true,
                                "components": Object {
                                  "DropdownIndicator": [Function],
                                  "Option": [Function],
                                  "ValueContainer": [Function],
                                },
                                "controlShouldRenderValue": true,
                                "dropdownIcon": undefined,
                                "escapeClearsValue": false,
                                "filterOption": [Function],
                                "formatGroupLabel": [Function],
                                "getOptionLabel": [Function],
                                "getOptionValue": [Function],
                                "hideDropdownIcon": false,
                                "inputIcon": undefined,
                                "inputValue": "",
                                "isDisabled": false,
                                "isLoading": false,
                                "isMulti": false,
                                "isOptionDisabled": [Function],
                                "isRtl": false,
                                "isSearchable": true,
                                "loadingMessage": [Function],
                                "maxMenuHeight": 300,
                                "menuIsOpen": false,
                                "menuPlacement": "auto",
                                "menuPosition": "absolute",
                                "menuShouldBlockScroll": false,
                                "menuShouldScrollIntoView": true,
                                "minMenuHeight": 140,
                                "noOptionsMessage": [Function],
                                "onChange": [Function],
                                "onInputChange": [Function],
                                "onMenuClose": [Function],
                                "onMenuOpen": [Function],
                                "openMenuOnClick": true,
                                "openMenuOnFocus": false,
                                "options": Array [
                                  Object {
                                    "label": "5",
                                    "value": 5,
                                  },
                                  Object {
                                    "label": "20",
                                    "value": 20,
                                  },
                                  Object {
                                    "label": "50",
                                    "value": 50,
                                  },
                                ],
                                "pageSize": 5,
                                "placeholder": "Select...",
                                "screenReaderStatus": [Function],
                                "styles": Object {
                                  "clearIndicator": [Function],
                                  "container": [Function],
                                  "control": [Function],
                                  "dropdownIndicator": [Function],
                                  "indicatorSeparator": [Function],
                                  "indicatorsContainer": [Function],
                                  "menu": [Function],
                                  "menuList": [Function],
                                  "menuPortal": [Function],
                                  "option": [Function],
                                  "singleValue": [Function],
                                  "valueContainer": [Function],
                                },
                                "tabIndex": "0",
                                "tabSelectsValue": true,
                                "value": Object {
                                  "label": "5",
                                  "value": 5,
                                },
                              }
                            }
                            setValue={[Function]}
                            theme={
                              Object {
                                "borderRadius": 4,
                                "colors": Object {
                                  "danger": "#DE350B",
                                  "dangerLight": "#FFBDAD",
                                  "neutral0": "hsl(0, 0%, 100%)",
                                  "neutral10": "hsl(0, 0%, 90%)",
                                  "neutral20": "hsl(0, 0%, 80%)",
                                  "neutral30": "hsl(0, 0%, 70%)",
                                  "neutral40": "hsl(0, 0%, 60%)",
                                  "neutral5": "hsl(0, 0%, 95%)",
                                  "neutral50": "hsl(0, 0%, 50%)",
                                  "neutral60": "hsl(0, 0%, 40%)",
                                  "neutral70": "hsl(0, 0%, 30%)",
                                  "neutral80": "hsl(0, 0%, 20%)",
                                  "neutral90": "hsl(0, 0%, 10%)",
                                  "primary": "#2684FF",
                                  "primary25": "#DEEBFF",
                                  "primary50": "#B2D4FF",
                                  "primary75": "#4C9AFF",
                                },
                                "spacing": Object {
                                  "baseUnit": 4,
                                  "controlHeight": 38,
                                  "menuGutter": 8,
                                },
                              }
                            }
                          >
                            <EmotionCssPropInternal
                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                              className=""
                              css={
                                Object {
                                  "boxSizing": "border-box",
                                  "cursor": "default",
                                  "direction": null,
                                  "label": "container",
                                  "pointerEvents": "auto",
                                  "position": "relative",
                                  "width": "100%",
                                }
                              }
                              onKeyDown={[Function]}
                            >
                              <div
                                className=" css-gprrux-container"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "5",
                                        "value": 5,
                                      },
                                      Object {
                                        "label": "20",
                                        "value": 20,
                                      },
                                      Object {
                                        "label": "50",
                                        "value": 50,
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "borderless": true,
                                      "captureMenuScroll": false,
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "DropdownIndicator": [Function],
                                        "Option": [Function],
                                        "ValueContainer": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "dropdownIcon": undefined,
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "hideDropdownIcon": false,
                                      "inputIcon": undefined,
                                      "inputValue": "",
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "auto",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "5",
                                          "value": 5,
                                        },
                                        Object {
                                          "label": "20",
                                          "value": 20,
                                        },
                                        Object {
                                          "label": "50",
                                          "value": 50,
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "styles": Object {
                                        "clearIndicator": [Function],
                                        "container": [Function],
                                        "control": [Function],
                                        "dropdownIndicator": [Function],
                                        "indicatorSeparator": [Function],
                                        "indicatorsContainer": [Function],
                                        "menu": [Function],
                                        "menuList": [Function],
                                        "menuPortal": [Function],
                                        "option": [Function],
                                        "singleValue": [Function],
                                        "valueContainer": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "value": Object {
                                        "label": "5",
                                        "value": 5,
                                      },
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#DE350B",
                                        "dangerLight": "#FFBDAD",
                                        "neutral0": "hsl(0, 0%, 100%)",
                                        "neutral10": "hsl(0, 0%, 90%)",
                                        "neutral20": "hsl(0, 0%, 80%)",
                                        "neutral30": "hsl(0, 0%, 70%)",
                                        "neutral40": "hsl(0, 0%, 60%)",
                                        "neutral5": "hsl(0, 0%, 95%)",
                                        "neutral50": "hsl(0, 0%, 50%)",
                                        "neutral60": "hsl(0, 0%, 40%)",
                                        "neutral70": "hsl(0, 0%, 30%)",
                                        "neutral80": "hsl(0, 0%, 20%)",
                                        "neutral90": "hsl(0, 0%, 10%)",
                                        "primary": "#2684FF",
                                        "primary25": "#DEEBFF",
                                        "primary50": "#B2D4FF",
                                        "primary75": "#4C9AFF",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                    className=""
                                    css={
                                      Object {
                                        "&:hover": Object {
                                          "borderColor": "hsl(0, 0%, 70%)",
                                        },
                                        ":hover": Object {
                                          "backgroundColor": "#f0f0f7",
                                          "border": "none",
                                        },
                                        "alignItems": "center",
                                        "backgroundColor": "transparent",
                                        "border": "none",
                                        "borderColor": "hsl(0, 0%, 80%)",
                                        "borderRadius": "3px",
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "boxShadow": "none",
                                        "boxSizing": "border-box",
                                        "cursor": "default",
                                        "display": "flex",
                                        "flexWrap": "wrap",
                                        "fontSize": "14px",
                                        "justifyContent": "space-between",
                                        "label": "control",
                                        "lineHeight": 1.5,
                                        "minHeight": "40px",
                                        "outline": "0 !important",
                                        "pointerEvents": "auto",
                                        "position": "relative",
                                        "transition": "background-color 0.2s ease-out, border-color 0.2s ease-out",
                                      }
                                    }
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <div
                                      className=" css-1ugvnb2-control"
                                      onMouseDown={[Function]}
                                      onTouchEnd={[Function]}
                                    >
                                      <ValueContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        inputIcon={null}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={
                                          Array [
                                            Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                            Object {
                                              "label": "20",
                                              "value": 20,
                                            },
                                            Object {
                                              "label": "50",
                                              "value": 50,
                                            },
                                          ]
                                        }
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "borderless": true,
                                            "captureMenuScroll": false,
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "DropdownIndicator": [Function],
                                              "Option": [Function],
                                              "ValueContainer": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "dropdownIcon": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "hideDropdownIcon": false,
                                            "inputIcon": undefined,
                                            "inputValue": "",
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "auto",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "noOptionsMessage": [Function],
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [
                                              Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                              Object {
                                                "label": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "label": "50",
                                                "value": 50,
                                              },
                                            ],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "styles": Object {
                                              "clearIndicator": [Function],
                                              "container": [Function],
                                              "control": [Function],
                                              "dropdownIndicator": [Function],
                                              "indicatorSeparator": [Function],
                                              "indicatorsContainer": [Function],
                                              "menu": [Function],
                                              "menuList": [Function],
                                              "menuPortal": [Function],
                                              "option": [Function],
                                              "singleValue": [Function],
                                              "valueContainer": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <ValueContainer
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          inputIcon={null}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                              Object {
                                                "label": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "label": "50",
                                                "value": 50,
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "borderless": true,
                                              "captureMenuScroll": false,
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "Option": [Function],
                                                "ValueContainer": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "dropdownIcon": undefined,
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "hideDropdownIcon": false,
                                              "inputIcon": undefined,
                                              "inputValue": "",
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "auto",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "5",
                                                  "value": 5,
                                                },
                                                Object {
                                                  "label": "20",
                                                  "value": 20,
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": 50,
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "container": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "indicatorSeparator": [Function],
                                                "indicatorsContainer": [Function],
                                                "menu": [Function],
                                                "menuList": [Function],
                                                "menuPortal": [Function],
                                                "option": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "value": Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className=""
                                            css={
                                              Object {
                                                "WebkitOverflowScrolling": "touch",
                                                "alignItems": "center",
                                                "boxSizing": "border-box",
                                                "display": "flex",
                                                "flex": 1,
                                                "flexWrap": "wrap",
                                                "overflow": "hidden",
                                                "padding": "0 10px",
                                                "position": "relative",
                                              }
                                            }
                                          >
                                            <div
                                              className=" css-1gbz4ua"
                                            >
                                              <SingleValue
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                data={
                                                  Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  }
                                                }
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={true}
                                                isDisabled={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "borderless": true,
                                                    "captureMenuScroll": false,
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "Option": [Function],
                                                      "ValueContainer": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "dropdownIcon": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "hideDropdownIcon": false,
                                                    "inputIcon": undefined,
                                                    "inputValue": "",
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "auto",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "noOptionsMessage": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "5",
                                                        "value": 5,
                                                      },
                                                      Object {
                                                        "label": "20",
                                                        "value": 20,
                                                      },
                                                      Object {
                                                        "label": "50",
                                                        "value": 50,
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "clearIndicator": [Function],
                                                      "container": [Function],
                                                      "control": [Function],
                                                      "dropdownIndicator": [Function],
                                                      "indicatorSeparator": [Function],
                                                      "indicatorsContainer": [Function],
                                                      "menu": [Function],
                                                      "menuList": [Function],
                                                      "menuPortal": [Function],
                                                      "option": [Function],
                                                      "singleValue": [Function],
                                                      "valueContainer": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  className=""
                                                  css={
                                                    Object {
                                                      "boxSizing": "border-box",
                                                      "color": "inherit",
                                                      "label": "singleValue",
                                                      "marginLeft": 2,
                                                      "marginRight": 2,
                                                      "maxWidth": "calc(100% - 8px)",
                                                      "overflow": "hidden",
                                                      "position": "absolute",
                                                      "textOverflow": "ellipsis",
                                                      "top": "50%",
                                                      "transform": "translateY(-50%)",
                                                      "whiteSpace": "nowrap",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className=" css-1xqm9c7-singleValue"
                                                  >
                                                    5
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </SingleValue>
                                              <Input
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                id="react-select-3-input"
                                                innerRef={[Function]}
                                                isDisabled={false}
                                                isHidden={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "borderless": true,
                                                    "captureMenuScroll": false,
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "Option": [Function],
                                                      "ValueContainer": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "dropdownIcon": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "hideDropdownIcon": false,
                                                    "inputIcon": undefined,
                                                    "inputValue": "",
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "auto",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "noOptionsMessage": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "5",
                                                        "value": 5,
                                                      },
                                                      Object {
                                                        "label": "20",
                                                        "value": 20,
                                                      },
                                                      Object {
                                                        "label": "50",
                                                        "value": 50,
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "clearIndicator": [Function],
                                                      "container": [Function],
                                                      "control": [Function],
                                                      "dropdownIndicator": [Function],
                                                      "indicatorSeparator": [Function],
                                                      "indicatorsContainer": [Function],
                                                      "menu": [Function],
                                                      "menuList": [Function],
                                                      "menuPortal": [Function],
                                                      "option": [Function],
                                                      "singleValue": [Function],
                                                      "valueContainer": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                  }
                                                }
                                                spellCheck="false"
                                                tabIndex="0"
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  css={
                                                    Object {
                                                      "boxSizing": "border-box",
                                                      "color": "hsl(0, 0%, 20%)",
                                                      "margin": 2,
                                                      "paddingBottom": 2,
                                                      "paddingTop": 2,
                                                      "visibility": "visible",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-b8ldur-Input"
                                                  >
                                                    <AutosizeInput
                                                      aria-autocomplete="list"
                                                      autoCapitalize="none"
                                                      autoComplete="off"
                                                      autoCorrect="off"
                                                      className=""
                                                      disabled={false}
                                                      id="react-select-3-input"
                                                      injectStyles={true}
                                                      inputRef={[Function]}
                                                      inputStyle={
                                                        Object {
                                                          "background": 0,
                                                          "border": 0,
                                                          "color": "inherit",
                                                          "fontSize": "inherit",
                                                          "label": "input",
                                                          "opacity": 1,
                                                          "outline": 0,
                                                          "padding": 0,
                                                        }
                                                      }
                                                      minWidth={1}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      spellCheck="false"
                                                      tabIndex="0"
                                                      type="text"
                                                      value=""
                                                    >
                                                      <div
                                                        className=""
                                                        style={
                                                          Object {
                                                            "display": "inline-block",
                                                          }
                                                        }
                                                      >
                                                        <input
                                                          aria-autocomplete="list"
                                                          autoCapitalize="none"
                                                          autoComplete="off"
                                                          autoCorrect="off"
                                                          disabled={false}
                                                          id="react-select-3-input"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          spellCheck="false"
                                                          style={
                                                            Object {
                                                              "background": 0,
                                                              "border": 0,
                                                              "boxSizing": "content-box",
                                                              "color": "inherit",
                                                              "fontSize": "inherit",
                                                              "label": "input",
                                                              "opacity": 1,
                                                              "outline": 0,
                                                              "padding": 0,
                                                              "width": "2px",
                                                            }
                                                          }
                                                          tabIndex="0"
                                                          type="text"
                                                          value=""
                                                        />
                                                        <div
                                                          style={
                                                            Object {
                                                              "height": 0,
                                                              "left": 0,
                                                              "overflow": "scroll",
                                                              "position": "absolute",
                                                              "top": 0,
                                                              "visibility": "hidden",
                                                              "whiteSpace": "pre",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </AutosizeInput>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </Input>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </ValueContainer>
                                      </ValueContainer>
                                      <IndicatorsContainer
                                        clearValue={[Function]}
                                        cx={[Function]}
                                        getStyles={[Function]}
                                        getValue={[Function]}
                                        hasValue={true}
                                        isDisabled={false}
                                        isMulti={false}
                                        isRtl={false}
                                        options={
                                          Array [
                                            Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                            Object {
                                              "label": "20",
                                              "value": 20,
                                            },
                                            Object {
                                              "label": "50",
                                              "value": 50,
                                            },
                                          ]
                                        }
                                        selectOption={[Function]}
                                        selectProps={
                                          Object {
                                            "backspaceRemovesValue": true,
                                            "blurInputOnSelect": true,
                                            "borderless": true,
                                            "captureMenuScroll": false,
                                            "closeMenuOnScroll": false,
                                            "closeMenuOnSelect": true,
                                            "components": Object {
                                              "DropdownIndicator": [Function],
                                              "Option": [Function],
                                              "ValueContainer": [Function],
                                            },
                                            "controlShouldRenderValue": true,
                                            "dropdownIcon": undefined,
                                            "escapeClearsValue": false,
                                            "filterOption": [Function],
                                            "formatGroupLabel": [Function],
                                            "getOptionLabel": [Function],
                                            "getOptionValue": [Function],
                                            "hideDropdownIcon": false,
                                            "inputIcon": undefined,
                                            "inputValue": "",
                                            "isDisabled": false,
                                            "isLoading": false,
                                            "isMulti": false,
                                            "isOptionDisabled": [Function],
                                            "isRtl": false,
                                            "isSearchable": true,
                                            "loadingMessage": [Function],
                                            "maxMenuHeight": 300,
                                            "menuIsOpen": false,
                                            "menuPlacement": "auto",
                                            "menuPosition": "absolute",
                                            "menuShouldBlockScroll": false,
                                            "menuShouldScrollIntoView": true,
                                            "minMenuHeight": 140,
                                            "noOptionsMessage": [Function],
                                            "onChange": [Function],
                                            "onInputChange": [Function],
                                            "onMenuClose": [Function],
                                            "onMenuOpen": [Function],
                                            "openMenuOnClick": true,
                                            "openMenuOnFocus": false,
                                            "options": Array [
                                              Object {
                                                "label": "5",
                                                "value": 5,
                                              },
                                              Object {
                                                "label": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "label": "50",
                                                "value": 50,
                                              },
                                            ],
                                            "pageSize": 5,
                                            "placeholder": "Select...",
                                            "screenReaderStatus": [Function],
                                            "styles": Object {
                                              "clearIndicator": [Function],
                                              "container": [Function],
                                              "control": [Function],
                                              "dropdownIndicator": [Function],
                                              "indicatorSeparator": [Function],
                                              "indicatorsContainer": [Function],
                                              "menu": [Function],
                                              "menuList": [Function],
                                              "menuPortal": [Function],
                                              "option": [Function],
                                              "singleValue": [Function],
                                              "valueContainer": [Function],
                                            },
                                            "tabIndex": "0",
                                            "tabSelectsValue": true,
                                            "value": Object {
                                              "label": "5",
                                              "value": 5,
                                            },
                                          }
                                        }
                                        setValue={[Function]}
                                        theme={
                                          Object {
                                            "borderRadius": 4,
                                            "colors": Object {
                                              "danger": "#DE350B",
                                              "dangerLight": "#FFBDAD",
                                              "neutral0": "hsl(0, 0%, 100%)",
                                              "neutral10": "hsl(0, 0%, 90%)",
                                              "neutral20": "hsl(0, 0%, 80%)",
                                              "neutral30": "hsl(0, 0%, 70%)",
                                              "neutral40": "hsl(0, 0%, 60%)",
                                              "neutral5": "hsl(0, 0%, 95%)",
                                              "neutral50": "hsl(0, 0%, 50%)",
                                              "neutral60": "hsl(0, 0%, 40%)",
                                              "neutral70": "hsl(0, 0%, 30%)",
                                              "neutral80": "hsl(0, 0%, 20%)",
                                              "neutral90": "hsl(0, 0%, 10%)",
                                              "primary": "#2684FF",
                                              "primary25": "#DEEBFF",
                                              "primary50": "#B2D4FF",
                                              "primary75": "#4C9AFF",
                                            },
                                            "spacing": Object {
                                              "baseUnit": 4,
                                              "controlHeight": 38,
                                              "menuGutter": 8,
                                            },
                                          }
                                        }
                                      >
                                        <EmotionCssPropInternal
                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                          className=""
                                          css={
                                            Object {
                                              "alignItems": "center",
                                              "alignSelf": "stretch",
                                              "boxSizing": "border-box",
                                              "color": "#b6bbc7",
                                              "display": "flex",
                                              "flexShrink": 0,
                                              "marginRight": "5px",
                                            }
                                          }
                                        >
                                          <div
                                            className=" css-1y4h2k2-IndicatorsContainer"
                                          >
                                            <IndicatorSeparator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={
                                                Array [
                                                  Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                  Object {
                                                    "label": "20",
                                                    "value": 20,
                                                  },
                                                  Object {
                                                    "label": "50",
                                                    "value": 50,
                                                  },
                                                ]
                                              }
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "borderless": true,
                                                  "captureMenuScroll": false,
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "DropdownIndicator": [Function],
                                                    "Option": [Function],
                                                    "ValueContainer": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "dropdownIcon": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "hideDropdownIcon": false,
                                                  "inputIcon": undefined,
                                                  "inputValue": "",
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "auto",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "noOptionsMessage": [Function],
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "styles": Object {
                                                    "clearIndicator": [Function],
                                                    "container": [Function],
                                                    "control": [Function],
                                                    "dropdownIndicator": [Function],
                                                    "indicatorSeparator": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "menu": [Function],
                                                    "menuList": [Function],
                                                    "menuPortal": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <EmotionCssPropInternal
                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                className=""
                                                css={
                                                  Object {
                                                    "display": "none",
                                                  }
                                                }
                                              >
                                                <span
                                                  className=" css-1xjgjl1-IndicatorSeparator"
                                                />
                                              </EmotionCssPropInternal>
                                            </IndicatorSeparator>
                                            <LUKDropdownIndicator
                                              clearValue={[Function]}
                                              cx={[Function]}
                                              getStyles={[Function]}
                                              getValue={[Function]}
                                              hasValue={true}
                                              innerProps={
                                                Object {
                                                  "aria-hidden": "true",
                                                  "onMouseDown": [Function],
                                                  "onTouchEnd": [Function],
                                                }
                                              }
                                              isDisabled={false}
                                              isFocused={false}
                                              isMulti={false}
                                              isRtl={false}
                                              options={
                                                Array [
                                                  Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                  Object {
                                                    "label": "20",
                                                    "value": 20,
                                                  },
                                                  Object {
                                                    "label": "50",
                                                    "value": 50,
                                                  },
                                                ]
                                              }
                                              selectOption={[Function]}
                                              selectProps={
                                                Object {
                                                  "backspaceRemovesValue": true,
                                                  "blurInputOnSelect": true,
                                                  "borderless": true,
                                                  "captureMenuScroll": false,
                                                  "closeMenuOnScroll": false,
                                                  "closeMenuOnSelect": true,
                                                  "components": Object {
                                                    "DropdownIndicator": [Function],
                                                    "Option": [Function],
                                                    "ValueContainer": [Function],
                                                  },
                                                  "controlShouldRenderValue": true,
                                                  "dropdownIcon": undefined,
                                                  "escapeClearsValue": false,
                                                  "filterOption": [Function],
                                                  "formatGroupLabel": [Function],
                                                  "getOptionLabel": [Function],
                                                  "getOptionValue": [Function],
                                                  "hideDropdownIcon": false,
                                                  "inputIcon": undefined,
                                                  "inputValue": "",
                                                  "isDisabled": false,
                                                  "isLoading": false,
                                                  "isMulti": false,
                                                  "isOptionDisabled": [Function],
                                                  "isRtl": false,
                                                  "isSearchable": true,
                                                  "loadingMessage": [Function],
                                                  "maxMenuHeight": 300,
                                                  "menuIsOpen": false,
                                                  "menuPlacement": "auto",
                                                  "menuPosition": "absolute",
                                                  "menuShouldBlockScroll": false,
                                                  "menuShouldScrollIntoView": true,
                                                  "minMenuHeight": 140,
                                                  "noOptionsMessage": [Function],
                                                  "onChange": [Function],
                                                  "onInputChange": [Function],
                                                  "onMenuClose": [Function],
                                                  "onMenuOpen": [Function],
                                                  "openMenuOnClick": true,
                                                  "openMenuOnFocus": false,
                                                  "options": Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ],
                                                  "pageSize": 5,
                                                  "placeholder": "Select...",
                                                  "screenReaderStatus": [Function],
                                                  "styles": Object {
                                                    "clearIndicator": [Function],
                                                    "container": [Function],
                                                    "control": [Function],
                                                    "dropdownIndicator": [Function],
                                                    "indicatorSeparator": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "menu": [Function],
                                                    "menuList": [Function],
                                                    "menuPortal": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  },
                                                  "tabIndex": "0",
                                                  "tabSelectsValue": true,
                                                  "value": Object {
                                                    "label": "5",
                                                    "value": 5,
                                                  },
                                                }
                                              }
                                              setValue={[Function]}
                                              theme={
                                                Object {
                                                  "borderRadius": 4,
                                                  "colors": Object {
                                                    "danger": "#DE350B",
                                                    "dangerLight": "#FFBDAD",
                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                    "primary": "#2684FF",
                                                    "primary25": "#DEEBFF",
                                                    "primary50": "#B2D4FF",
                                                    "primary75": "#4C9AFF",
                                                  },
                                                  "spacing": Object {
                                                    "baseUnit": 4,
                                                    "controlHeight": 38,
                                                    "menuGutter": 8,
                                                  },
                                                }
                                              }
                                            >
                                              <DropdownIndicator
                                                clearValue={[Function]}
                                                cx={[Function]}
                                                getStyles={[Function]}
                                                getValue={[Function]}
                                                hasValue={true}
                                                innerProps={
                                                  Object {
                                                    "aria-hidden": "true",
                                                    "onMouseDown": [Function],
                                                    "onTouchEnd": [Function],
                                                  }
                                                }
                                                isDisabled={false}
                                                isFocused={false}
                                                isMulti={false}
                                                isRtl={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                    Object {
                                                      "label": "20",
                                                      "value": 20,
                                                    },
                                                    Object {
                                                      "label": "50",
                                                      "value": 50,
                                                    },
                                                  ]
                                                }
                                                selectOption={[Function]}
                                                selectProps={
                                                  Object {
                                                    "backspaceRemovesValue": true,
                                                    "blurInputOnSelect": true,
                                                    "borderless": true,
                                                    "captureMenuScroll": false,
                                                    "closeMenuOnScroll": false,
                                                    "closeMenuOnSelect": true,
                                                    "components": Object {
                                                      "DropdownIndicator": [Function],
                                                      "Option": [Function],
                                                      "ValueContainer": [Function],
                                                    },
                                                    "controlShouldRenderValue": true,
                                                    "dropdownIcon": undefined,
                                                    "escapeClearsValue": false,
                                                    "filterOption": [Function],
                                                    "formatGroupLabel": [Function],
                                                    "getOptionLabel": [Function],
                                                    "getOptionValue": [Function],
                                                    "hideDropdownIcon": false,
                                                    "inputIcon": undefined,
                                                    "inputValue": "",
                                                    "isDisabled": false,
                                                    "isLoading": false,
                                                    "isMulti": false,
                                                    "isOptionDisabled": [Function],
                                                    "isRtl": false,
                                                    "isSearchable": true,
                                                    "loadingMessage": [Function],
                                                    "maxMenuHeight": 300,
                                                    "menuIsOpen": false,
                                                    "menuPlacement": "auto",
                                                    "menuPosition": "absolute",
                                                    "menuShouldBlockScroll": false,
                                                    "menuShouldScrollIntoView": true,
                                                    "minMenuHeight": 140,
                                                    "noOptionsMessage": [Function],
                                                    "onChange": [Function],
                                                    "onInputChange": [Function],
                                                    "onMenuClose": [Function],
                                                    "onMenuOpen": [Function],
                                                    "openMenuOnClick": true,
                                                    "openMenuOnFocus": false,
                                                    "options": Array [
                                                      Object {
                                                        "label": "5",
                                                        "value": 5,
                                                      },
                                                      Object {
                                                        "label": "20",
                                                        "value": 20,
                                                      },
                                                      Object {
                                                        "label": "50",
                                                        "value": 50,
                                                      },
                                                    ],
                                                    "pageSize": 5,
                                                    "placeholder": "Select...",
                                                    "screenReaderStatus": [Function],
                                                    "styles": Object {
                                                      "clearIndicator": [Function],
                                                      "container": [Function],
                                                      "control": [Function],
                                                      "dropdownIndicator": [Function],
                                                      "indicatorSeparator": [Function],
                                                      "indicatorsContainer": [Function],
                                                      "menu": [Function],
                                                      "menuList": [Function],
                                                      "menuPortal": [Function],
                                                      "option": [Function],
                                                      "singleValue": [Function],
                                                      "valueContainer": [Function],
                                                    },
                                                    "tabIndex": "0",
                                                    "tabSelectsValue": true,
                                                    "value": Object {
                                                      "label": "5",
                                                      "value": 5,
                                                    },
                                                  }
                                                }
                                                setValue={[Function]}
                                                theme={
                                                  Object {
                                                    "borderRadius": 4,
                                                    "colors": Object {
                                                      "danger": "#DE350B",
                                                      "dangerLight": "#FFBDAD",
                                                      "neutral0": "hsl(0, 0%, 100%)",
                                                      "neutral10": "hsl(0, 0%, 90%)",
                                                      "neutral20": "hsl(0, 0%, 80%)",
                                                      "neutral30": "hsl(0, 0%, 70%)",
                                                      "neutral40": "hsl(0, 0%, 60%)",
                                                      "neutral5": "hsl(0, 0%, 95%)",
                                                      "neutral50": "hsl(0, 0%, 50%)",
                                                      "neutral60": "hsl(0, 0%, 40%)",
                                                      "neutral70": "hsl(0, 0%, 30%)",
                                                      "neutral80": "hsl(0, 0%, 20%)",
                                                      "neutral90": "hsl(0, 0%, 10%)",
                                                      "primary": "#2684FF",
                                                      "primary25": "#DEEBFF",
                                                      "primary50": "#B2D4FF",
                                                      "primary75": "#4C9AFF",
                                                    },
                                                    "spacing": Object {
                                                      "baseUnit": 4,
                                                      "controlHeight": 38,
                                                      "menuGutter": 8,
                                                    },
                                                  }
                                                }
                                              >
                                                <EmotionCssPropInternal
                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                  aria-hidden="true"
                                                  className=""
                                                  css={
                                                    Object {
                                                      "color": "#b6bbc7",
                                                      "display": "flex",
                                                      "margin": "5px",
                                                      "padding": "0",
                                                    }
                                                  }
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                >
                                                  <div
                                                    aria-hidden="true"
                                                    className=" css-1vd5qh6-DropdownIndicator"
                                                    onMouseDown={[Function]}
                                                    onTouchEnd={[Function]}
                                                  >
                                                    <DownChevron>
                                                      <Svg
                                                        size={20}
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                          aria-hidden="true"
                                                          css={
                                                            Object {
                                                              "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                              "name": "19bqh2r",
                                                              "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                            }
                                                          }
                                                          focusable="false"
                                                          height={20}
                                                          viewBox="0 0 20 20"
                                                          width={20}
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="css-6q0nyr-Svg"
                                                            focusable="false"
                                                            height={20}
                                                            viewBox="0 0 20 20"
                                                            width={20}
                                                          >
                                                            <path
                                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                            />
                                                          </svg>
                                                        </EmotionCssPropInternal>
                                                      </Svg>
                                                    </DownChevron>
                                                  </div>
                                                </EmotionCssPropInternal>
                                              </DropdownIndicator>
                                            </LUKDropdownIndicator>
                                          </div>
                                        </EmotionCssPropInternal>
                                      </IndicatorsContainer>
                                    </div>
                                  </EmotionCssPropInternal>
                                </Control>
                              </div>
                            </EmotionCssPropInternal>
                          </SelectContainer>
                        </Select>
                      </StateManager>
                    </SelectController>
                  </Select>
                </div>
              </StyledComponent>
            </styled__RowPerPageWrapper>
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 5 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c3"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c4"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c5"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={false}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={false}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={false}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={false}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c3"
                      disabled={false}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c4"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c5"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
  </div>
</Table>
`;

exports[`Table handlePageChange should set page and rowsPerPage when invoked 1`] = `
.c5 {
  background-color: #ffffff;
  border-collapse: collapse;
  border: none;
  table-layout: fixed;
  width: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
}

.c7 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
  width: 33%;
}

.c8 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c9 {
  background-color: #f0f0f7;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c11 {
  background-color: inherit;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c6 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c6 td,
.c6 th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 200;
}

.c10 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c1 {
  color: #555e6f;
  display: inline-block;
  font-size: 14px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  margin: 5px 5px 5px 0;
  color: #8e929b;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.c4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  opacity: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  min-width: 14px;
}

.c2 {
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  line-height: 18px;
  outline: none;
  padding: 10px 20px;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  white-space: nowrap;
  background-color: transparent;
  border-color: transparent;
  color: #6124e2;
}

.c2:hover {
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.1);
}

.c2:active {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.15);
}

.c2:disabled {
  cursor: not-allowed;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  border-color: transparent;
  color: #b6bbc7;
}

.c2:focus {
  box-shadow: rgba(0,0,0,0.15) 0 0 0 2px;
}

<Table
  data={
    Array [
      Object {
        "dob": "1942-11-30",
        "id": "1",
        "lastUpdated": "2019-09-01",
        "manager": "Spongebob",
        "name": "Eugene Krabs",
      },
      Object {
        "dob": "",
        "id": "2",
        "lastUpdated": "2019-08-29",
        "manager": "Smitty",
        "name": "Squidward Tentacles",
      },
      Object {
        "dob": "1987-11-17",
        "id": "3",
        "lastUpdated": "2019-07-30",
        "manager": "Patrick",
        "name": "Sandy Cheeks",
      },
      Object {
        "dob": "1975-06-23",
        "id": "4",
        "lastUpdated": "2019-08-16",
        "manager": "Patchy",
        "name": "Larry the Lobster",
      },
      Object {
        "dob": "1942-11-30",
        "id": "5",
        "lastUpdated": "2019-08-20",
        "manager": "Spongebob",
        "name": "Sheldon Plankton",
      },
      Object {
        "dob": "",
        "id": "6",
        "lastUpdated": "2019-08-21",
        "manager": "Spongebob",
        "name": "Mrs. Puff",
      },
      Object {
        "dob": "1678-04-20",
        "id": "7",
        "lastUpdated": "2019-06-21",
        "manager": "Spongebob",
        "name": "Flying Dutchman",
      },
    ]
  }
  headers={
    Array [
      Object {
        "cellStyle": Object {
          "width": "33%",
        },
        "key": "name",
        "label": "Subject Name",
      },
      Object {
        "key": "dob",
        "label": "Date of Birth",
      },
      Object {
        "key": "manager",
        "label": "Manager",
      },
      Object {
        "key": "lastUpdated",
        "label": "Last Updated",
      },
      Object {
        "key": "id",
        "label": "ID",
        "sortable": false,
      },
    ]
  }
  paginated={true}
>
  <div>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
    <styled__StyledTable>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__StyledTable-r3xwjs-0",
              "isStatic": false,
              "lastClassName": "c5",
              "rules": Array [
                "background-color:",
                "#ffffff",
                ";border-collapse:collapse;border:none;table-layout:fixed;width:100%;",
              ],
            },
            "displayName": "styled__StyledTable",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__StyledTable-r3xwjs-0",
            "target": "table",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <table
          className="c5"
        >
          <TableHeader
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            onSort={[Function]}
            order={false}
            sticky={true}
          >
            <thead>
              <styled__StyledRow
                sticky={true}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__StyledRow-r3xwjs-3",
                        "isStatic": false,
                        "lastClassName": "c10",
                        "rules": Array [
                          "background-color:",
                          "#ffffff",
                          ";border-bottom:1px solid ",
                          "#dcdce7",
                          ";td,th{",
                          [Function],
                          "};",
                        ],
                      },
                      "displayName": "styled__StyledRow",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__StyledRow-r3xwjs-3",
                      "target": "tr",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  sticky={true}
                >
                  <tr
                    className="c6"
                  >
                    <HeadCell
                      cellStyle={
                        Object {
                          "width": "33%",
                        }
                      }
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="name"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={
                          Object {
                            "width": "33%",
                          }
                        }
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={
                            Object {
                              "width": "33%",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c7"
                            onClick={[Function]}
                          >
                            Subject Name
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="dob"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Date of Birth
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="manager"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Manager
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="lastUpdated"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Last Updated
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="id"
                      order={false}
                      sortable={false}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <th
                            className="c9"
                          >
                            ID
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                  </tr>
                </StyledComponent>
              </styled__StyledRow>
            </thead>
          </TableHeader>
          <TableBody
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            data={
              Array [
                Object {
                  "dob": "1942-11-30",
                  "id": "1",
                  "lastUpdated": "2019-09-01",
                  "manager": "Spongebob",
                  "name": "Eugene Krabs",
                },
                Object {
                  "dob": "",
                  "id": "2",
                  "lastUpdated": "2019-08-29",
                  "manager": "Smitty",
                  "name": "Squidward Tentacles",
                },
                Object {
                  "dob": "1987-11-17",
                  "id": "3",
                  "lastUpdated": "2019-07-30",
                  "manager": "Patrick",
                  "name": "Sandy Cheeks",
                },
                Object {
                  "dob": "1975-06-23",
                  "id": "4",
                  "lastUpdated": "2019-08-16",
                  "manager": "Patchy",
                  "name": "Larry the Lobster",
                },
                Object {
                  "dob": "1942-11-30",
                  "id": "5",
                  "lastUpdated": "2019-08-20",
                  "manager": "Spongebob",
                  "name": "Sheldon Plankton",
                },
                Object {
                  "dob": "",
                  "id": "6",
                  "lastUpdated": "2019-08-21",
                  "manager": "Spongebob",
                  "name": "Mrs. Puff",
                },
                Object {
                  "dob": "1678-04-20",
                  "id": "7",
                  "lastUpdated": "2019-06-21",
                  "manager": "Spongebob",
                  "name": "Flying Dutchman",
                },
              ]
            }
            exact={false}
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            page={0}
            rowsPerPage={7}
          >
            <tbody>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "1",
                    "lastUpdated": "2019-09-01",
                    "manager": "Spongebob",
                    "name": "Eugene Krabs",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="1"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="1_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Eugene Krabs
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-09-01
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "2",
                    "lastUpdated": "2019-08-29",
                    "manager": "Smitty",
                    "name": "Squidward Tentacles",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="2"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="2_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Squidward Tentacles
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Smitty
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-29
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1987-11-17",
                    "id": "3",
                    "lastUpdated": "2019-07-30",
                    "manager": "Patrick",
                    "name": "Sandy Cheeks",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="3"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="3_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sandy Cheeks
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1987-11-17
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patrick
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-07-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            3
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1975-06-23",
                    "id": "4",
                    "lastUpdated": "2019-08-16",
                    "manager": "Patchy",
                    "name": "Larry the Lobster",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="4"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="4_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Larry the Lobster
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1975-06-23
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patchy
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-16
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            4
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "5",
                    "lastUpdated": "2019-08-20",
                    "manager": "Spongebob",
                    "name": "Sheldon Plankton",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="5"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="5_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sheldon Plankton
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            5
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "6",
                    "lastUpdated": "2019-08-21",
                    "manager": "Spongebob",
                    "name": "Mrs. Puff",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="6"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="6_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Mrs. Puff
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            6
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1678-04-20",
                    "id": "7",
                    "lastUpdated": "2019-06-21",
                    "manager": "Spongebob",
                    "name": "Flying Dutchman",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="7"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="7_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Flying Dutchman
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1678-04-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-06-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            7
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </StyledComponent>
    </styled__StyledTable>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
  </div>
</Table>
`;

exports[`Table handleSort should invoke onSort with property and isDesc 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "column": "name",
        "order": "desc",
        "page": 0,
        "rowsPerPage": 7,
        "start": 0,
      },
      Object {
        "target": "mock",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Table handleSort should invoke onSort with property and isDesc 2`] = `
.c5 {
  background-color: #ffffff;
  border-collapse: collapse;
  border: none;
  table-layout: fixed;
  width: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
}

.c7 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
  width: 33%;
}

.c8 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c9 {
  background-color: #f0f0f7;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c11 {
  background-color: inherit;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c6 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c6 td,
.c6 th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 200;
}

.c10 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c1 {
  color: #555e6f;
  display: inline-block;
  font-size: 14px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  margin: 5px 5px 5px 0;
  color: #8e929b;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.c4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  opacity: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  min-width: 14px;
}

.c2 {
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  line-height: 18px;
  outline: none;
  padding: 10px 20px;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  white-space: nowrap;
  background-color: transparent;
  border-color: transparent;
  color: #6124e2;
}

.c2:hover {
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.1);
}

.c2:active {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.15);
}

.c2:disabled {
  cursor: not-allowed;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  border-color: transparent;
  color: #b6bbc7;
}

.c2:focus {
  box-shadow: rgba(0,0,0,0.15) 0 0 0 2px;
}

<Table
  data={
    Array [
      Object {
        "dob": "1942-11-30",
        "id": "1",
        "lastUpdated": "2019-09-01",
        "manager": "Spongebob",
        "name": "Eugene Krabs",
      },
      Object {
        "dob": "",
        "id": "2",
        "lastUpdated": "2019-08-29",
        "manager": "Smitty",
        "name": "Squidward Tentacles",
      },
      Object {
        "dob": "1987-11-17",
        "id": "3",
        "lastUpdated": "2019-07-30",
        "manager": "Patrick",
        "name": "Sandy Cheeks",
      },
      Object {
        "dob": "1975-06-23",
        "id": "4",
        "lastUpdated": "2019-08-16",
        "manager": "Patchy",
        "name": "Larry the Lobster",
      },
      Object {
        "dob": "1942-11-30",
        "id": "5",
        "lastUpdated": "2019-08-20",
        "manager": "Spongebob",
        "name": "Sheldon Plankton",
      },
      Object {
        "dob": "",
        "id": "6",
        "lastUpdated": "2019-08-21",
        "manager": "Spongebob",
        "name": "Mrs. Puff",
      },
      Object {
        "dob": "1678-04-20",
        "id": "7",
        "lastUpdated": "2019-06-21",
        "manager": "Spongebob",
        "name": "Flying Dutchman",
      },
    ]
  }
  headers={
    Array [
      Object {
        "cellStyle": Object {
          "width": "33%",
        },
        "key": "name",
        "label": "Subject Name",
      },
      Object {
        "key": "dob",
        "label": "Date of Birth",
      },
      Object {
        "key": "manager",
        "label": "Manager",
      },
      Object {
        "key": "lastUpdated",
        "label": "Last Updated",
      },
      Object {
        "key": "id",
        "label": "ID",
        "sortable": false,
      },
    ]
  }
  onSort={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "column": "name",
            "order": "desc",
            "page": 0,
            "rowsPerPage": 7,
            "start": 0,
          },
          Object {
            "target": "mock",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  paginated={true}
>
  <div>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
    <styled__StyledTable>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__StyledTable-r3xwjs-0",
              "isStatic": false,
              "lastClassName": "c5",
              "rules": Array [
                "background-color:",
                "#ffffff",
                ";border-collapse:collapse;border:none;table-layout:fixed;width:100%;",
              ],
            },
            "displayName": "styled__StyledTable",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__StyledTable-r3xwjs-0",
            "target": "table",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <table
          className="c5"
        >
          <TableHeader
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            onSort={[Function]}
            order={false}
            sticky={true}
          >
            <thead>
              <styled__StyledRow
                sticky={true}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__StyledRow-r3xwjs-3",
                        "isStatic": false,
                        "lastClassName": "c10",
                        "rules": Array [
                          "background-color:",
                          "#ffffff",
                          ";border-bottom:1px solid ",
                          "#dcdce7",
                          ";td,th{",
                          [Function],
                          "};",
                        ],
                      },
                      "displayName": "styled__StyledRow",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__StyledRow-r3xwjs-3",
                      "target": "tr",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  sticky={true}
                >
                  <tr
                    className="c6"
                  >
                    <HeadCell
                      cellStyle={
                        Object {
                          "width": "33%",
                        }
                      }
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="name"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={
                          Object {
                            "width": "33%",
                          }
                        }
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={
                            Object {
                              "width": "33%",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c7"
                            onClick={[Function]}
                          >
                            Subject Name
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="dob"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Date of Birth
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="manager"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Manager
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="lastUpdated"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Last Updated
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="id"
                      order={false}
                      sortable={false}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <th
                            className="c9"
                          >
                            ID
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                  </tr>
                </StyledComponent>
              </styled__StyledRow>
            </thead>
          </TableHeader>
          <TableBody
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            data={
              Array [
                Object {
                  "dob": "1942-11-30",
                  "id": "1",
                  "lastUpdated": "2019-09-01",
                  "manager": "Spongebob",
                  "name": "Eugene Krabs",
                },
                Object {
                  "dob": "",
                  "id": "2",
                  "lastUpdated": "2019-08-29",
                  "manager": "Smitty",
                  "name": "Squidward Tentacles",
                },
                Object {
                  "dob": "1987-11-17",
                  "id": "3",
                  "lastUpdated": "2019-07-30",
                  "manager": "Patrick",
                  "name": "Sandy Cheeks",
                },
                Object {
                  "dob": "1975-06-23",
                  "id": "4",
                  "lastUpdated": "2019-08-16",
                  "manager": "Patchy",
                  "name": "Larry the Lobster",
                },
                Object {
                  "dob": "1942-11-30",
                  "id": "5",
                  "lastUpdated": "2019-08-20",
                  "manager": "Spongebob",
                  "name": "Sheldon Plankton",
                },
                Object {
                  "dob": "",
                  "id": "6",
                  "lastUpdated": "2019-08-21",
                  "manager": "Spongebob",
                  "name": "Mrs. Puff",
                },
                Object {
                  "dob": "1678-04-20",
                  "id": "7",
                  "lastUpdated": "2019-06-21",
                  "manager": "Spongebob",
                  "name": "Flying Dutchman",
                },
              ]
            }
            exact={false}
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            page={0}
            rowsPerPage={7}
          >
            <tbody>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "1",
                    "lastUpdated": "2019-09-01",
                    "manager": "Spongebob",
                    "name": "Eugene Krabs",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="1"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="1_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Eugene Krabs
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-09-01
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "2",
                    "lastUpdated": "2019-08-29",
                    "manager": "Smitty",
                    "name": "Squidward Tentacles",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="2"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="2_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Squidward Tentacles
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Smitty
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-29
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1987-11-17",
                    "id": "3",
                    "lastUpdated": "2019-07-30",
                    "manager": "Patrick",
                    "name": "Sandy Cheeks",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="3"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="3_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sandy Cheeks
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1987-11-17
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patrick
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-07-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            3
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1975-06-23",
                    "id": "4",
                    "lastUpdated": "2019-08-16",
                    "manager": "Patchy",
                    "name": "Larry the Lobster",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="4"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="4_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Larry the Lobster
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1975-06-23
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patchy
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-16
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            4
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "5",
                    "lastUpdated": "2019-08-20",
                    "manager": "Spongebob",
                    "name": "Sheldon Plankton",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="5"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="5_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sheldon Plankton
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            5
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "6",
                    "lastUpdated": "2019-08-21",
                    "manager": "Spongebob",
                    "name": "Mrs. Puff",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="6"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="6_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Mrs. Puff
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            6
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1678-04-20",
                    "id": "7",
                    "lastUpdated": "2019-06-21",
                    "manager": "Spongebob",
                    "name": "Flying Dutchman",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="7"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="7_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Flying Dutchman
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1678-04-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-06-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            7
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </StyledComponent>
    </styled__StyledTable>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
  </div>
</Table>
`;

exports[`Table handleSort should set order and orderBy when invoked 1`] = `
.c5 {
  background-color: #ffffff;
  border-collapse: collapse;
  border: none;
  table-layout: fixed;
  width: 100%;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
}

.c7 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
  width: 33%;
}

.c8 {
  background-color: #f0f0f7;
  cursor: pointer;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c9 {
  background-color: #f0f0f7;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c11 {
  background-color: inherit;
  cursor: auto;
  padding: 10px 10px;
  text-align: left;
  word-wrap: break-word;
}

.c6 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c6 td,
.c6 th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 200;
}

.c10 {
  background-color: #ffffff;
  border-bottom: 1px solid #dcdce7;
}

.c1 {
  color: #555e6f;
  display: inline-block;
  font-size: 14px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  margin: 5px 5px 5px 0;
  color: #8e929b;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.c4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  opacity: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  min-width: 14px;
}

.c2 {
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  line-height: 18px;
  outline: none;
  padding: 10px 20px;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  white-space: nowrap;
  background-color: transparent;
  border-color: transparent;
  color: #6124e2;
}

.c2:hover {
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.1);
}

.c2:active {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.15);
}

.c2:disabled {
  cursor: not-allowed;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  border-color: transparent;
  color: #b6bbc7;
}

.c2:focus {
  box-shadow: rgba(0,0,0,0.15) 0 0 0 2px;
}

<Table
  data={
    Array [
      Object {
        "dob": "1942-11-30",
        "id": "1",
        "lastUpdated": "2019-09-01",
        "manager": "Spongebob",
        "name": "Eugene Krabs",
      },
      Object {
        "dob": "",
        "id": "2",
        "lastUpdated": "2019-08-29",
        "manager": "Smitty",
        "name": "Squidward Tentacles",
      },
      Object {
        "dob": "1987-11-17",
        "id": "3",
        "lastUpdated": "2019-07-30",
        "manager": "Patrick",
        "name": "Sandy Cheeks",
      },
      Object {
        "dob": "1975-06-23",
        "id": "4",
        "lastUpdated": "2019-08-16",
        "manager": "Patchy",
        "name": "Larry the Lobster",
      },
      Object {
        "dob": "1942-11-30",
        "id": "5",
        "lastUpdated": "2019-08-20",
        "manager": "Spongebob",
        "name": "Sheldon Plankton",
      },
      Object {
        "dob": "",
        "id": "6",
        "lastUpdated": "2019-08-21",
        "manager": "Spongebob",
        "name": "Mrs. Puff",
      },
      Object {
        "dob": "1678-04-20",
        "id": "7",
        "lastUpdated": "2019-06-21",
        "manager": "Spongebob",
        "name": "Flying Dutchman",
      },
    ]
  }
  headers={
    Array [
      Object {
        "cellStyle": Object {
          "width": "33%",
        },
        "key": "name",
        "label": "Subject Name",
      },
      Object {
        "key": "dob",
        "label": "Date of Birth",
      },
      Object {
        "key": "manager",
        "label": "Manager",
      },
      Object {
        "key": "lastUpdated",
        "label": "Last Updated",
      },
      Object {
        "key": "id",
        "label": "ID",
        "sortable": false,
      },
    ]
  }
  paginated={true}
>
  <div>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
    <styled__StyledTable>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__StyledTable-r3xwjs-0",
              "isStatic": false,
              "lastClassName": "c5",
              "rules": Array [
                "background-color:",
                "#ffffff",
                ";border-collapse:collapse;border:none;table-layout:fixed;width:100%;",
              ],
            },
            "displayName": "styled__StyledTable",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__StyledTable-r3xwjs-0",
            "target": "table",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <table
          className="c5"
        >
          <TableHeader
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            onSort={[Function]}
            order={false}
            sticky={true}
          >
            <thead>
              <styled__StyledRow
                sticky={true}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__StyledRow-r3xwjs-3",
                        "isStatic": false,
                        "lastClassName": "c10",
                        "rules": Array [
                          "background-color:",
                          "#ffffff",
                          ";border-bottom:1px solid ",
                          "#dcdce7",
                          ";td,th{",
                          [Function],
                          "};",
                        ],
                      },
                      "displayName": "styled__StyledRow",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__StyledRow-r3xwjs-3",
                      "target": "tr",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  sticky={true}
                >
                  <tr
                    className="c6"
                  >
                    <HeadCell
                      cellStyle={
                        Object {
                          "width": "33%",
                        }
                      }
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="name"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={
                          Object {
                            "width": "33%",
                          }
                        }
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={
                            Object {
                              "width": "33%",
                            }
                          }
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c7"
                            onClick={[Function]}
                          >
                            Subject Name
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="dob"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Date of Birth
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="manager"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Manager
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="lastUpdated"
                      onClick={[Function]}
                      order={false}
                      sortable={true}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <th
                            className="c8"
                            onClick={[Function]}
                          >
                            Last Updated
                            <span>
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      320,
                                      512,
                                      Array [],
                                      "f0dc",
                                      Array [
                                        "M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z",
                                        "",
                                      ],
                                    ],
                                    "iconName": "sort",
                                    "prefix": "fad",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-sort fa-w-10 fa-fw "
                                  data-icon="sort"
                                  data-prefix="fad"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 320 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <g
                                    className="fa-group"
                                    style={Object {}}
                                  >
                                    <path
                                      className="fa-secondary"
                                      d="M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                    <path
                                      className="fa-primary"
                                      d=""
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </g>
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                    <HeadCell
                      cellStyle={Object {}}
                      components={
                        Object {
                          "Body": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Cell": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "styled__Cell-r3xwjs-2",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Cell",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "styled__Cell-r3xwjs-2",
                            "target": "td",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          },
                          "HeadCell": [Function],
                          "Header": [Function],
                          "Pagination": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": [Function],
                          },
                          "Row": [Function],
                        }
                      }
                      key="id"
                      order={false}
                      sortable={false}
                    >
                      <Cell
                        as="th"
                        cellStyle={Object {}}
                      >
                        <StyledComponent
                          as="th"
                          cellStyle={Object {}}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <th
                            className="c9"
                          >
                            ID
                          </th>
                        </StyledComponent>
                      </Cell>
                    </HeadCell>
                  </tr>
                </StyledComponent>
              </styled__StyledRow>
            </thead>
          </TableHeader>
          <TableBody
            components={
              Object {
                "Body": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Cell": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "styled__Cell-r3xwjs-2",
                    "isStatic": false,
                    "lastClassName": "c11",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Cell",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "styled__Cell-r3xwjs-2",
                  "target": "td",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
                "HeadCell": [Function],
                "Header": [Function],
                "Pagination": Object {
                  "$$typeof": Symbol(react.memo),
                  "compare": null,
                  "type": [Function],
                },
                "Row": [Function],
              }
            }
            data={
              Array [
                Object {
                  "dob": "1942-11-30",
                  "id": "1",
                  "lastUpdated": "2019-09-01",
                  "manager": "Spongebob",
                  "name": "Eugene Krabs",
                },
                Object {
                  "dob": "",
                  "id": "2",
                  "lastUpdated": "2019-08-29",
                  "manager": "Smitty",
                  "name": "Squidward Tentacles",
                },
                Object {
                  "dob": "1987-11-17",
                  "id": "3",
                  "lastUpdated": "2019-07-30",
                  "manager": "Patrick",
                  "name": "Sandy Cheeks",
                },
                Object {
                  "dob": "1975-06-23",
                  "id": "4",
                  "lastUpdated": "2019-08-16",
                  "manager": "Patchy",
                  "name": "Larry the Lobster",
                },
                Object {
                  "dob": "1942-11-30",
                  "id": "5",
                  "lastUpdated": "2019-08-20",
                  "manager": "Spongebob",
                  "name": "Sheldon Plankton",
                },
                Object {
                  "dob": "",
                  "id": "6",
                  "lastUpdated": "2019-08-21",
                  "manager": "Spongebob",
                  "name": "Mrs. Puff",
                },
                Object {
                  "dob": "1678-04-20",
                  "id": "7",
                  "lastUpdated": "2019-06-21",
                  "manager": "Spongebob",
                  "name": "Flying Dutchman",
                },
              ]
            }
            exact={false}
            headers={
              Array [
                Object {
                  "cellStyle": Object {
                    "width": "33%",
                  },
                  "key": "name",
                  "label": "Subject Name",
                },
                Object {
                  "key": "dob",
                  "label": "Date of Birth",
                },
                Object {
                  "key": "manager",
                  "label": "Manager",
                },
                Object {
                  "key": "lastUpdated",
                  "label": "Last Updated",
                },
                Object {
                  "key": "id",
                  "label": "ID",
                  "sortable": false,
                },
              ]
            }
            page={0}
            rowsPerPage={7}
          >
            <tbody>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "1",
                    "lastUpdated": "2019-09-01",
                    "manager": "Spongebob",
                    "name": "Eugene Krabs",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="1"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="1_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Eugene Krabs
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-09-01
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="1_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "2",
                    "lastUpdated": "2019-08-29",
                    "manager": "Smitty",
                    "name": "Squidward Tentacles",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="2"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="2_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Squidward Tentacles
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Smitty
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-29
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="2_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1987-11-17",
                    "id": "3",
                    "lastUpdated": "2019-07-30",
                    "manager": "Patrick",
                    "name": "Sandy Cheeks",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="3"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="3_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sandy Cheeks
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1987-11-17
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patrick
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-07-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="3_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            3
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1975-06-23",
                    "id": "4",
                    "lastUpdated": "2019-08-16",
                    "manager": "Patchy",
                    "name": "Larry the Lobster",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="4"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="4_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Larry the Lobster
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1975-06-23
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Patchy
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-16
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="4_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            4
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1942-11-30",
                    "id": "5",
                    "lastUpdated": "2019-08-20",
                    "manager": "Spongebob",
                    "name": "Sheldon Plankton",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="5"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="5_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Sheldon Plankton
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1942-11-30
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="5_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            5
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "",
                    "id": "6",
                    "lastUpdated": "2019-08-21",
                    "manager": "Spongebob",
                    "name": "Mrs. Puff",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="6"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="6_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Mrs. Puff
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          />
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-08-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="6_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            6
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
              <TableRow
                components={
                  Object {
                    "Body": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Cell": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled__Cell-r3xwjs-2",
                        "isStatic": false,
                        "lastClassName": "c11",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Cell",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "styled__Cell-r3xwjs-2",
                      "target": "td",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    },
                    "HeadCell": [Function],
                    "Header": [Function],
                    "Pagination": Object {
                      "$$typeof": Symbol(react.memo),
                      "compare": null,
                      "type": [Function],
                    },
                    "Row": [Function],
                  }
                }
                data={
                  Object {
                    "dob": "1678-04-20",
                    "id": "7",
                    "lastUpdated": "2019-06-21",
                    "manager": "Spongebob",
                    "name": "Flying Dutchman",
                  }
                }
                headers={
                  Array [
                    Object {
                      "cellStyle": Object {
                        "width": "33%",
                      },
                      "key": "name",
                      "label": "Subject Name",
                    },
                    Object {
                      "key": "dob",
                      "label": "Date of Birth",
                    },
                    Object {
                      "key": "manager",
                      "label": "Manager",
                    },
                    Object {
                      "key": "lastUpdated",
                      "label": "Last Updated",
                    },
                    Object {
                      "key": "id",
                      "label": "ID",
                      "sortable": false,
                    },
                  ]
                }
                key="7"
              >
                <styled__StyledRow>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "styled__StyledRow-r3xwjs-3",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "background-color:",
                            "#ffffff",
                            ";border-bottom:1px solid ",
                            "#dcdce7",
                            ";td,th{",
                            [Function],
                            "};",
                          ],
                        },
                        "displayName": "styled__StyledRow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "styled__StyledRow-r3xwjs-3",
                        "target": "tr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <tr
                      className="c10"
                    >
                      <Cell
                        key="7_cell_name"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Flying Dutchman
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_dob"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            1678-04-20
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_manager"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            Spongebob
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_lastUpdated"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            2019-06-21
                          </td>
                        </StyledComponent>
                      </Cell>
                      <Cell
                        key="7_cell_id"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styled__Cell-r3xwjs-2",
                                "isStatic": false,
                                "lastClassName": "c11",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Cell",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styled__Cell-r3xwjs-2",
                              "target": "td",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <td
                            className="c11"
                          >
                            7
                          </td>
                        </StyledComponent>
                      </Cell>
                    </tr>
                  </StyledComponent>
                </styled__StyledRow>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </StyledComponent>
    </styled__StyledTable>
    <PaginationToolbar
      count={7}
      onPageChange={[Function]}
      page={0}
      rowsPerPage={7}
      rowsPerPageOptions={Array []}
    >
      <styled__PaginationWrapper>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled__PaginationWrapper-r3xwjs-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "align-items:center;display:flex;justify-content:flex-end;width:100%;",
                ],
              },
              "displayName": "styled__PaginationWrapper",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <Label
              id="row-range"
              subtle={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Label-sc-130fyca-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "color:",
                        "#555e6f",
                        ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                        [Function],
                        ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                      ],
                    },
                    "displayName": "Label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Label-sc-130fyca-0",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="row-range"
                subtle={true}
              >
                <label
                  className="c1"
                  id="row-range"
                >
                  1 - 7 of 7
                </label>
              </StyledComponent>
            </Label>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f053",
                        "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                      ],
                      "iconName": "chevron-left",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f053",
                                          "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                        ],
                                        "iconName": "chevron-left",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                      data-icon="chevron-left"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
            <IconButton
              disabled={true}
              icon={
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        256,
                        512,
                        Array [],
                        "f054",
                        "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                      ],
                      "iconName": "chevron-right",
                      "prefix": "far",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  swapOpacity={false}
                  symbol={false}
                  title=""
                  transform={null}
                />
              }
              mode="subtle"
              onClick={[Function]}
            >
              <Button
                disabled={true}
                fontColor=""
                isLoading={false}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <StyledButton
                  disabled={true}
                  fontColor=""
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <StyledComponent
                    disabled={true}
                    fontColor=""
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledButton-sc-1etazn9-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                            "100ms",
                            " ease-out,border-color ",
                            "100ms",
                            " ease-out,box-shadow ",
                            "100ms",
                            " ease-out;width:",
                            [Function],
                            ";white-space:nowrap;",
                            [Function],
                            ";",
                            [Function],
                            ";:hover{cursor:pointer;text-decoration:none;",
                            [Function],
                            "};:active{text-decoration:none;",
                            [Function],
                            "};:disabled{cursor:not-allowed;text-decoration:none;",
                            [Function],
                            "};:focus{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "StyledButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "StyledButton-sc-1etazn9-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    mode="subtle"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="c2"
                      disabled={true}
                      mode="subtle"
                      onClick={[Function]}
                      type="button"
                    >
                      <ContentWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ContentWrapper-sc-36hfub-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                                ],
                              },
                              "displayName": "ContentWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ContentWrapper-sc-36hfub-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="c3"
                          >
                            <Content
                              isLoading={false}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Content-sc-18psqsj-0",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "flex:1 1 auto;opacity:",
                                        [Function],
                                        ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                      ],
                                    },
                                    "displayName": "Content",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Content-sc-18psqsj-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                              >
                                <span
                                  className="c4"
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          256,
                                          512,
                                          Array [],
                                          "f054",
                                          "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                        ],
                                        "iconName": "chevron-right",
                                        "prefix": "far",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                      data-icon="chevron-right"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 256 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </span>
                              </StyledComponent>
                            </Content>
                          </span>
                        </StyledComponent>
                      </ContentWrapper>
                    </button>
                  </StyledComponent>
                </StyledButton>
              </Button>
            </IconButton>
          </div>
        </StyledComponent>
      </styled__PaginationWrapper>
    </PaginationToolbar>
  </div>
</Table>
`;

exports[`Table props paginated Table should set rowsPerPage to data.length when data is provided 1`] = `
<div>
  <styled__StyledTable>
    <TableHeader
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      onSort={[Function]}
      order={false}
      sticky={true}
    />
    <Memo(TableBody)
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      data={
        Array [
          Object {
            "dob": "1942-11-30",
            "id": "1",
            "lastUpdated": "2019-09-01",
            "manager": "Spongebob",
            "name": "Eugene Krabs",
          },
          Object {
            "dob": "",
            "id": "2",
            "lastUpdated": "2019-08-29",
            "manager": "Smitty",
            "name": "Squidward Tentacles",
          },
          Object {
            "dob": "1987-11-17",
            "id": "3",
            "lastUpdated": "2019-07-30",
            "manager": "Patrick",
            "name": "Sandy Cheeks",
          },
          Object {
            "dob": "1975-06-23",
            "id": "4",
            "lastUpdated": "2019-08-16",
            "manager": "Patchy",
            "name": "Larry the Lobster",
          },
          Object {
            "dob": "1942-11-30",
            "id": "5",
            "lastUpdated": "2019-08-20",
            "manager": "Spongebob",
            "name": "Sheldon Plankton",
          },
          Object {
            "dob": "",
            "id": "6",
            "lastUpdated": "2019-08-21",
            "manager": "Spongebob",
            "name": "Mrs. Puff",
          },
          Object {
            "dob": "1678-04-20",
            "id": "7",
            "lastUpdated": "2019-06-21",
            "manager": "Spongebob",
            "name": "Flying Dutchman",
          },
        ]
      }
      exact={false}
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      page={0}
      rowsPerPage={7}
    />
  </styled__StyledTable>
</div>
`;

exports[`Table props paginated paginated Table should set rowsPerPage to 5 by default 1`] = `
<div>
  <Memo(PaginationToolbar)
    count={0}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={5}
    rowsPerPageOptions={Array []}
  />
  <styled__StyledTable>
    <TableHeader
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      onSort={[Function]}
      order={false}
      sticky={true}
    />
    <Memo(TableBody)
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      data={Array []}
      exact={false}
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      page={0}
      rowsPerPage={5}
    />
  </styled__StyledTable>
  <Memo(PaginationToolbar)
    count={0}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={5}
    rowsPerPageOptions={Array []}
  />
</div>
`;

exports[`Table props paginated paginated Table should set rowsPerPage to data.length when data is provided 1`] = `
<div>
  <Memo(PaginationToolbar)
    count={7}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={7}
    rowsPerPageOptions={Array []}
  />
  <styled__StyledTable>
    <TableHeader
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      onSort={[Function]}
      order={false}
      sticky={true}
    />
    <Memo(TableBody)
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      data={
        Array [
          Object {
            "dob": "1942-11-30",
            "id": "1",
            "lastUpdated": "2019-09-01",
            "manager": "Spongebob",
            "name": "Eugene Krabs",
          },
          Object {
            "dob": "",
            "id": "2",
            "lastUpdated": "2019-08-29",
            "manager": "Smitty",
            "name": "Squidward Tentacles",
          },
          Object {
            "dob": "1987-11-17",
            "id": "3",
            "lastUpdated": "2019-07-30",
            "manager": "Patrick",
            "name": "Sandy Cheeks",
          },
          Object {
            "dob": "1975-06-23",
            "id": "4",
            "lastUpdated": "2019-08-16",
            "manager": "Patchy",
            "name": "Larry the Lobster",
          },
          Object {
            "dob": "1942-11-30",
            "id": "5",
            "lastUpdated": "2019-08-20",
            "manager": "Spongebob",
            "name": "Sheldon Plankton",
          },
          Object {
            "dob": "",
            "id": "6",
            "lastUpdated": "2019-08-21",
            "manager": "Spongebob",
            "name": "Mrs. Puff",
          },
          Object {
            "dob": "1678-04-20",
            "id": "7",
            "lastUpdated": "2019-06-21",
            "manager": "Spongebob",
            "name": "Flying Dutchman",
          },
        ]
      }
      exact={false}
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      page={0}
      rowsPerPage={7}
    />
  </styled__StyledTable>
  <Memo(PaginationToolbar)
    count={7}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={7}
    rowsPerPageOptions={Array []}
  />
</div>
`;

exports[`Table props paginated paginated Table should set rowsPerPage to first element of rowsPerPageOptions when provided 1`] = `
<div>
  <Memo(PaginationToolbar)
    count={7}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={10}
    rowsPerPageOptions={
      Array [
        10,
        20,
        100,
      ]
    }
  />
  <styled__StyledTable>
    <TableHeader
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      onSort={[Function]}
      order={false}
      sticky={true}
    />
    <Memo(TableBody)
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      data={
        Array [
          Object {
            "dob": "1942-11-30",
            "id": "1",
            "lastUpdated": "2019-09-01",
            "manager": "Spongebob",
            "name": "Eugene Krabs",
          },
          Object {
            "dob": "",
            "id": "2",
            "lastUpdated": "2019-08-29",
            "manager": "Smitty",
            "name": "Squidward Tentacles",
          },
          Object {
            "dob": "1987-11-17",
            "id": "3",
            "lastUpdated": "2019-07-30",
            "manager": "Patrick",
            "name": "Sandy Cheeks",
          },
          Object {
            "dob": "1975-06-23",
            "id": "4",
            "lastUpdated": "2019-08-16",
            "manager": "Patchy",
            "name": "Larry the Lobster",
          },
          Object {
            "dob": "1942-11-30",
            "id": "5",
            "lastUpdated": "2019-08-20",
            "manager": "Spongebob",
            "name": "Sheldon Plankton",
          },
          Object {
            "dob": "",
            "id": "6",
            "lastUpdated": "2019-08-21",
            "manager": "Spongebob",
            "name": "Mrs. Puff",
          },
          Object {
            "dob": "1678-04-20",
            "id": "7",
            "lastUpdated": "2019-06-21",
            "manager": "Spongebob",
            "name": "Flying Dutchman",
          },
        ]
      }
      exact={false}
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      page={0}
      rowsPerPage={10}
    />
  </styled__StyledTable>
  <Memo(PaginationToolbar)
    count={7}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={10}
    rowsPerPageOptions={
      Array [
        10,
        20,
        100,
      ]
    }
  />
</div>
`;

exports[`Table props paginated paginated=true should render PaginationToolbar 1`] = `
<div>
  <Memo(PaginationToolbar)
    count={7}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={7}
    rowsPerPageOptions={Array []}
  />
  <styled__StyledTable>
    <TableHeader
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      onSort={[Function]}
      order={false}
      sticky={true}
    />
    <Memo(TableBody)
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      data={
        Array [
          Object {
            "dob": "1942-11-30",
            "id": "1",
            "lastUpdated": "2019-09-01",
            "manager": "Spongebob",
            "name": "Eugene Krabs",
          },
          Object {
            "dob": "",
            "id": "2",
            "lastUpdated": "2019-08-29",
            "manager": "Smitty",
            "name": "Squidward Tentacles",
          },
          Object {
            "dob": "1987-11-17",
            "id": "3",
            "lastUpdated": "2019-07-30",
            "manager": "Patrick",
            "name": "Sandy Cheeks",
          },
          Object {
            "dob": "1975-06-23",
            "id": "4",
            "lastUpdated": "2019-08-16",
            "manager": "Patchy",
            "name": "Larry the Lobster",
          },
          Object {
            "dob": "1942-11-30",
            "id": "5",
            "lastUpdated": "2019-08-20",
            "manager": "Spongebob",
            "name": "Sheldon Plankton",
          },
          Object {
            "dob": "",
            "id": "6",
            "lastUpdated": "2019-08-21",
            "manager": "Spongebob",
            "name": "Mrs. Puff",
          },
          Object {
            "dob": "1678-04-20",
            "id": "7",
            "lastUpdated": "2019-06-21",
            "manager": "Spongebob",
            "name": "Flying Dutchman",
          },
        ]
      }
      exact={false}
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      page={0}
      rowsPerPage={7}
    />
  </styled__StyledTable>
  <Memo(PaginationToolbar)
    count={7}
    onPageChange={[Function]}
    page={0}
    rowsPerPage={7}
    rowsPerPageOptions={Array []}
  />
</div>
`;

exports[`Table render should render table first child 1`] = `
<div>
  <styled__StyledTable>
    <TableHeader
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "lastClassName": "bSxEEP",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      onSort={[Function]}
      order={false}
      sticky={true}
    />
    <Memo(TableBody)
      components={
        Object {
          "Body": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Cell": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "styled__Cell-r3xwjs-2",
              "isStatic": false,
              "lastClassName": "bSxEEP",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Cell",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "styled__Cell-r3xwjs-2",
            "target": "td",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
          "HeadCell": [Function],
          "Header": [Function],
          "Pagination": Object {
            "$$typeof": Symbol(react.memo),
            "compare": null,
            "type": [Function],
          },
          "Row": [Function],
        }
      }
      data={
        Array [
          Object {
            "dob": "1942-11-30",
            "id": "1",
            "lastUpdated": "2019-09-01",
            "manager": "Spongebob",
            "name": "Eugene Krabs",
          },
          Object {
            "dob": "",
            "id": "2",
            "lastUpdated": "2019-08-29",
            "manager": "Smitty",
            "name": "Squidward Tentacles",
          },
          Object {
            "dob": "1987-11-17",
            "id": "3",
            "lastUpdated": "2019-07-30",
            "manager": "Patrick",
            "name": "Sandy Cheeks",
          },
          Object {
            "dob": "1975-06-23",
            "id": "4",
            "lastUpdated": "2019-08-16",
            "manager": "Patchy",
            "name": "Larry the Lobster",
          },
          Object {
            "dob": "1942-11-30",
            "id": "5",
            "lastUpdated": "2019-08-20",
            "manager": "Spongebob",
            "name": "Sheldon Plankton",
          },
          Object {
            "dob": "",
            "id": "6",
            "lastUpdated": "2019-08-21",
            "manager": "Spongebob",
            "name": "Mrs. Puff",
          },
          Object {
            "dob": "1678-04-20",
            "id": "7",
            "lastUpdated": "2019-06-21",
            "manager": "Spongebob",
            "name": "Flying Dutchman",
          },
        ]
      }
      exact={false}
      headers={
        Array [
          Object {
            "cellStyle": Object {
              "width": "33%",
            },
            "key": "name",
            "label": "Subject Name",
          },
          Object {
            "key": "dob",
            "label": "Date of Birth",
          },
          Object {
            "key": "manager",
            "label": "Manager",
          },
          Object {
            "key": "lastUpdated",
            "label": "Last Updated",
          },
          Object {
            "key": "id",
            "label": "ID",
            "sortable": false,
          },
        ]
      }
      page={0}
      rowsPerPage={7}
    />
  </styled__StyledTable>
</div>
`;
