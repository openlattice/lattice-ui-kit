// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaginationToolbar snapshots should match snaphot 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
}

.c1 {
  color: #555e6f;
  display: inline-block;
  font-size: 14px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  margin: 5px 5px 5px 0;
  color: #8e929b;
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
}

.c3 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  min-width: 14px;
}

.c4 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  opacity: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c2 {
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  line-height: 18px;
  outline: none;
  padding: 10px 20px;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  transition: background-color 100ms ease-out,border-color 100ms ease-out,box-shadow 100ms ease-out;
  white-space: nowrap;
  background-color: transparent;
  border-color: transparent;
  color: #6124e2;
}

.c2:hover {
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.1);
}

.c2:active {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: rgba(0,0,0,0.15);
}

.c2:disabled {
  cursor: not-allowed;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  border-color: transparent;
  color: #b6bbc7;
}

.c2:focus-visible {
  box-shadow: rgba(0,0,0,0.15) 0 0 0 2px;
}

<PaginationToolbar
  count={0}
  page={0}
>
  <styled__PaginationWrapper>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "styled__PaginationWrapper-r3xwjs-1",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "align-items:center;display:flex;justify-content:flex-end;width:100%;",
            ],
          },
          "displayName": "styled__PaginationWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "styled__PaginationWrapper-r3xwjs-1",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Label
          id="row-range"
          subtle={true}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Label-sc-130fyca-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "color:",
                    "#555e6f",
                    ";display:inline-block;font-size:14px;font-stretch:normal;font-style:normal;font-weight:",
                    [Function],
                    ";letter-spacing:normal;margin:5px 5px 5px 0;visibility:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "displayName": "Label",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Label-sc-130fyca-0",
                "target": "label",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="row-range"
            subtle={true}
          >
            <label
              className="c1"
              id="row-range"
            >
              0 - 0 of 0
            </label>
          </StyledComponent>
        </Label>
        <IconButton
          disabled={true}
          icon={
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={true}
              flip={null}
              icon={
                Object {
                  "icon": Array [
                    256,
                    512,
                    Array [],
                    "f053",
                    "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                  ],
                  "iconName": "chevron-left",
                  "prefix": "far",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              swapOpacity={false}
              symbol={false}
              title=""
              transform={null}
            />
          }
          mode="subtle"
          onClick={[Function]}
        >
          <Button
            disabled={true}
            fontColor=""
            isLoading={false}
            mode="subtle"
            onClick={[Function]}
            type="button"
          >
            <StyledButton
              disabled={true}
              fontColor=""
              mode="subtle"
              onClick={[Function]}
              type="button"
            >
              <StyledComponent
                disabled={true}
                fontColor=""
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton-sc-1etazn9-0",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                        "100ms",
                        " ease-out,border-color ",
                        "100ms",
                        " ease-out,box-shadow ",
                        "100ms",
                        " ease-out;width:",
                        [Function],
                        ";white-space:nowrap;",
                        [Function],
                        ";",
                        [Function],
                        ";:hover{cursor:pointer;text-decoration:none;",
                        [Function],
                        "};:active{text-decoration:none;",
                        [Function],
                        "};:disabled{cursor:not-allowed;text-decoration:none;",
                        [Function],
                        "};:focus-visible{",
                        [Function],
                        "}",
                      ],
                    },
                    "displayName": "StyledButton",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "StyledButton-sc-1etazn9-0",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <button
                  className="c2"
                  disabled={true}
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <ContentWrapper>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentWrapper-sc-36hfub-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                            ],
                          },
                          "displayName": "ContentWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentWrapper-sc-36hfub-0",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <span
                        className="c3"
                      >
                        <Content
                          isLoading={false}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Content-sc-18psqsj-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "flex:1 1 auto;opacity:",
                                    [Function],
                                    ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                  ],
                                },
                                "displayName": "Content",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Content-sc-18psqsj-0",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isLoading={false}
                          >
                            <span
                              className="c4"
                            >
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      256,
                                      512,
                                      Array [],
                                      "f053",
                                      "M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z",
                                    ],
                                    "iconName": "chevron-left",
                                    "prefix": "far",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-chevron-left fa-w-8 fa-fw "
                                  data-icon="chevron-left"
                                  data-prefix="far"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 256 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z"
                                    fill="currentColor"
                                    style={Object {}}
                                  />
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </StyledComponent>
                        </Content>
                      </span>
                    </StyledComponent>
                  </ContentWrapper>
                </button>
              </StyledComponent>
            </StyledButton>
          </Button>
        </IconButton>
        <IconButton
          disabled={true}
          icon={
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={true}
              flip={null}
              icon={
                Object {
                  "icon": Array [
                    256,
                    512,
                    Array [],
                    "f054",
                    "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                  ],
                  "iconName": "chevron-right",
                  "prefix": "far",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              swapOpacity={false}
              symbol={false}
              title=""
              transform={null}
            />
          }
          mode="subtle"
          onClick={[Function]}
        >
          <Button
            disabled={true}
            fontColor=""
            isLoading={false}
            mode="subtle"
            onClick={[Function]}
            type="button"
          >
            <StyledButton
              disabled={true}
              fontColor=""
              mode="subtle"
              onClick={[Function]}
              type="button"
            >
              <StyledComponent
                disabled={true}
                fontColor=""
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "StyledButton-sc-1etazn9-0",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "border-radius:3px;border-style:solid;border-width:1px;box-sizing:border-box;cursor:pointer;font-size:14px;line-height:18px;outline:none;padding:10px 20px;text-align:center;text-decoration:none;transition:background-color ",
                        "100ms",
                        " ease-out,border-color ",
                        "100ms",
                        " ease-out,box-shadow ",
                        "100ms",
                        " ease-out;width:",
                        [Function],
                        ";white-space:nowrap;",
                        [Function],
                        ";",
                        [Function],
                        ";:hover{cursor:pointer;text-decoration:none;",
                        [Function],
                        "};:active{text-decoration:none;",
                        [Function],
                        "};:disabled{cursor:not-allowed;text-decoration:none;",
                        [Function],
                        "};:focus-visible{",
                        [Function],
                        "}",
                      ],
                    },
                    "displayName": "StyledButton",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "StyledButton-sc-1etazn9-0",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                mode="subtle"
                onClick={[Function]}
                type="button"
              >
                <button
                  className="c2"
                  disabled={true}
                  mode="subtle"
                  onClick={[Function]}
                  type="button"
                >
                  <ContentWrapper>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentWrapper-sc-36hfub-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "align-self:center;display:inline-flex;flex-wrap:nowrap;max-width:100%;position:relative;overflow:hidden;min-width:14px;",
                            ],
                          },
                          "displayName": "ContentWrapper",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentWrapper-sc-36hfub-0",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <span
                        className="c3"
                      >
                        <Content
                          isLoading={false}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Content-sc-18psqsj-0",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "flex:1 1 auto;opacity:",
                                    [Function],
                                    ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;",
                                  ],
                                },
                                "displayName": "Content",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Content-sc-18psqsj-0",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isLoading={false}
                          >
                            <span
                              className="c4"
                            >
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={true}
                                flip={null}
                                icon={
                                  Object {
                                    "icon": Array [
                                      256,
                                      512,
                                      Array [],
                                      "f054",
                                      "M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z",
                                    ],
                                    "iconName": "chevron-right",
                                    "prefix": "far",
                                  }
                                }
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                swapOpacity={false}
                                symbol={false}
                                title=""
                                transform={null}
                              >
                                <svg
                                  aria-hidden="true"
                                  className="svg-inline--fa fa-chevron-right fa-w-8 fa-fw "
                                  data-icon="chevron-right"
                                  data-prefix="far"
                                  focusable="false"
                                  role="img"
                                  style={Object {}}
                                  viewBox="0 0 256 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z"
                                    fill="currentColor"
                                    style={Object {}}
                                  />
                                </svg>
                              </FontAwesomeIcon>
                            </span>
                          </StyledComponent>
                        </Content>
                      </span>
                    </StyledComponent>
                  </ContentWrapper>
                </button>
              </StyledComponent>
            </StyledButton>
          </Button>
        </IconButton>
      </div>
    </StyledComponent>
  </styled__PaginationWrapper>
</PaginationToolbar>
`;
